import {describe} from 'mocha'
import * as assert from "assert";

import {CharStreams, CodePointCharStream, CommonTokenStream} from "antlr4ts";
import {ParseTree} from "antlr4ts/tree";
import {
    AnyExprContext,
    BinaryExpressionContext,
    ExpressionContext,
    FilterContext,
    FilterTrafoContext,
    FirstMemberExprContext,
    FirstMemberExpressionContext,
    InExpressionContext,
    LogicalExpressionContext,
    MemberExprContext,
    OData4LiteLexer,
    OData4LiteParser,
    OdataRelativeURIContext, OrderbyItemContext,
    PropertyPathExprContext,
    SingleNavigationExprContext
} from "../src";
import {MetadataSymbols} from "../src/lang/edm/MetadataSymbols";
import * as xmldom from "@xmldom/xmldom";
import {Schema} from "../src/lang/edm/Schema";

describe('OData Lite', function () {
    const parser = new xmldom.DOMParser();
    let xml;
    let metaDataSymbol: MetadataSymbols;
    let schema: Schema;
    let getODataLiteParser: (odataUrl: string) => OData4LiteParser;

    before(function () {
        xml = parser.parseFromString(`<?xml version="1.0" encoding="utf-8"?><edmx:Edmx Version="4.0" xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx"><edmx:DataServices><Schema Namespace="QMV.Investigate.EntityModel" xmlns="http://docs.oasis-open.org/odata/ns/edm"><EntityType Name="ResolutionTypeReference"><Key><PropertyRef Name="ResolutionTypeReferenceId" /></Key><Property Name="ResolutionTypeReferenceId" Type="Edm.Byte" Nullable="false" /><Property Name="Description" Type="Edm.String" /><Property Name="IsSystem" Type="Edm.Boolean" Nullable="false" /><Property Name="IsDefault" Type="Edm.Boolean" Nullable="false" /><Property Name="ColorId" Type="Edm.Int32" /><NavigationProperty Name="Color" Type="QMV.Investigate.EntityModel.Color"><ReferentialConstraint Property="ColorId" ReferencedProperty="ColorId" /></NavigationProperty></EntityType><EntityType Name="ResolveStatusTypeReference"><Key><PropertyRef Name="ResolveStatusTypeReferenceId" /></Key><Property Name="ResolveStatusTypeReferenceId" Type="Edm.Byte" Nullable="false" /><Property Name="Description" Type="Edm.String" /><Property Name="IsSystem" Type="Edm.Boolean" Nullable="false" /><Property Name="IsDefault" Type="Edm.Boolean" Nullable="false" /><Property Name="IsResolved" Type="Edm.Boolean" Nullable="false" /><Property Name="IsOpen" Type="Edm.Boolean" Nullable="false" /><Property Name="ColorId" Type="Edm.Int32" /><NavigationProperty Name="Color" Type="QMV.Investigate.EntityModel.Color"><ReferentialConstraint Property="ColorId" ReferencedProperty="ColorId" /></NavigationProperty><NavigationProperty Name="Incident" Type="Collection(QMV.Investigate.EntityModel.Incident)" /><NavigationProperty Name="Issue" Type="Collection(QMV.Investigate.EntityModel.Issue)" /><NavigationProperty Name="IssueBreakdown" Type="Collection(QMV.Investigate.EntityModel.IssueBreakdown)" /><NavigationProperty Name="IncidentBreakdown" Type="Collection(QMV.Investigate.EntityModel.IncidentBreakdown)" /></EntityType><EntityType Name="ResultTypeReference"><Key><PropertyRef Name="ResultTypeReferenceId" /></Key><Property Name="ResultTypeReferenceId" Type="Edm.Byte" Nullable="false" /><Property Name="Description" Type="Edm.String" /><Property Name="IsSystem" Type="Edm.Boolean" Nullable="false" /><Property Name="IsDefault" Type="Edm.Boolean" Nullable="false" /><Property Name="ColorId" Type="Edm.Int32" /><NavigationProperty Name="Color" Type="QMV.Investigate.EntityModel.Color"><ReferentialConstraint Property="ColorId" ReferencedProperty="ColorId" /></NavigationProperty><NavigationProperty Name="ExecutionResult" Type="Collection(QMV.Investigate.EntityModel.ExecutionResult)" /></EntityType><EntityType Name="SeverityTypeReference"><Key><PropertyRef Name="SeverityTypeReferenceId" /></Key><Property Name="SeverityTypeReferenceId" Type="Edm.Byte" Nullable="false" /><Property Name="Description" Type="Edm.String" /><Property Name="IsSystem" Type="Edm.Boolean" Nullable="false" /><Property Name="IsDefault" Type="Edm.Boolean" Nullable="false" /><Property Name="ColorId" Type="Edm.Int32" /><NavigationProperty Name="Color" Type="QMV.Investigate.EntityModel.Color"><ReferentialConstraint Property="ColorId" ReferencedProperty="ColorId" /></NavigationProperty><NavigationProperty Name="Incident" Type="Collection(QMV.Investigate.EntityModel.Incident)" /><NavigationProperty Name="IssueBreakdown" Type="Collection(QMV.Investigate.EntityModel.IssueBreakdown)" /><NavigationProperty Name="IncidentBreakdown" Type="Collection(QMV.Investigate.EntityModel.IncidentBreakdown)" /><NavigationProperty Name="ExecutedScriptBySeverityType" Type="Collection(QMV.Investigate.EntityModel.ExecutedScriptBySeverityType)" /></EntityType><EntityType Name="EntityColorReference"><Key><PropertyRef Name="EntityColorReferenceId" /></Key><Property Name="EntityColorReferenceId" Type="Edm.Int32" Nullable="false" /><Property Name="Name" Type="Edm.String" /><Property Name="DisplayName" Type="Edm.String" /><Property Name="ColorId" Type="Edm.Int32" /><NavigationProperty Name="Color" Type="QMV.Investigate.EntityModel.Color"><ReferentialConstraint Property="ColorId" ReferencedProperty="ColorId" /></NavigationProperty></EntityType><EntityType Name="Incident"><Key><PropertyRef Name="IncidentId" /></Key><Property Name="IncidentId" Type="Edm.Int32" Nullable="false" /><Property Name="IssueId" Type="Edm.Int32" /><Property Name="DisplayCode" Type="Edm.String" /><Property Name="Name" Type="Edm.String" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="SeverityType" Type="Edm.Byte" Nullable="false" /><Property Name="Priority" Type="Edm.Decimal" /><Property Name="AssignedTo" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="IsAdvancedClassification" Type="Edm.Boolean" Nullable="false" /><Property Name="ApplicationEntityKeyValue" Type="Edm.String" /><Property Name="LastExecutionResultId" Type="Edm.Int32" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="UpdatedBy" Type="Edm.String" /><Property Name="UpdatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="NextActionDate" Type="Edm.DateTimeOffset" /><Property Name="ApplicationId" Type="Edm.Int32" /><Property Name="EnvironmentId" Type="Edm.Int32" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><NavigationProperty Name="Application" Type="QMV.Investigate.EntityModel.Application"><ReferentialConstraint Property="ApplicationId" ReferencedProperty="ApplicationId" /></NavigationProperty><NavigationProperty Name="ApplicationEntity" Type="QMV.Investigate.EntityModel.ApplicationEntity"><ReferentialConstraint Property="ApplicationEntityId" ReferencedProperty="ApplicationEntityId" /></NavigationProperty><NavigationProperty Name="Environment" Type="QMV.Investigate.EntityModel.Environment"><ReferentialConstraint Property="EnvironmentId" ReferencedProperty="EnvironmentId" /></NavigationProperty><NavigationProperty Name="ExecutionResult" Type="QMV.Investigate.EntityModel.ExecutionResult" /><NavigationProperty Name="Issue" Type="QMV.Investigate.EntityModel.Issue"><ReferentialConstraint Property="IssueId" ReferencedProperty="IssueId" /></NavigationProperty><NavigationProperty Name="ResolveStatusTypeReference" Type="QMV.Investigate.EntityModel.ResolveStatusTypeReference" /><NavigationProperty Name="SeverityTypeReference" Type="QMV.Investigate.EntityModel.SeverityTypeReference" /><NavigationProperty Name="IncidentExecutionResultLink" Type="Collection(QMV.Investigate.EntityModel.IncidentExecutionResultLink)" /><NavigationProperty Name="IncidentIncidentClassificationLink" Type="Collection(QMV.Investigate.EntityModel.IncidentIncidentClassificationLink)" /><NavigationProperty Name="IncidentReportPropertyLink" Type="Collection(QMV.Investigate.EntityModel.IncidentReportPropertyLink)" /><NavigationProperty Name="IncidentScenarioLink" Type="Collection(QMV.Investigate.EntityModel.IncidentScenarioLink)" /></EntityType><EntityType Name="Rule"><Key><PropertyRef Name="RuleId" /></Key><Property Name="RuleId" Type="Edm.Int32" Nullable="false" /><Property Name="FunctionalAreaId" Type="Edm.Int32" /><Property Name="DisplayCode" Type="Edm.String" /><Property Name="Name" Type="Edm.String" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="Synopsis" Type="Edm.String" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="UpdatedBy" Type="Edm.String" /><Property Name="UpdatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="IsIssue" Type="Edm.Boolean" Nullable="false" /><Property Name="ContentId" Type="Edm.Int32" /><Property Name="AssignedTo" Type="Edm.String" /><Property Name="EmailNotification" Type="Edm.Boolean" Nullable="false" /><Property Name="IncludeMasterScript" Type="Edm.Boolean" Nullable="false" /><NavigationProperty Name="FunctionalArea" Type="QMV.Investigate.EntityModel.FunctionalArea"><ReferentialConstraint Property="FunctionalAreaId" ReferencedProperty="FunctionalAreaId" /></NavigationProperty><NavigationProperty Name="Issue" Type="Collection(QMV.Investigate.EntityModel.Issue)" /><NavigationProperty Name="RuleDetail" Type="Collection(QMV.Investigate.EntityModel.RuleDetail)" /><NavigationProperty Name="RuleReportPropertyLink" Type="Collection(QMV.Investigate.EntityModel.RuleReportPropertyLink)" /><NavigationProperty Name="Scenario" Type="Collection(QMV.Investigate.EntityModel.Scenario)" /><NavigationProperty Name="Script" Type="Collection(QMV.Investigate.EntityModel.Script)" /><NavigationProperty Name="StatementExceptionLinkExecutionResultLink" Type="Collection(QMV.Investigate.EntityModel.StatementExceptionLinkExecutionResultLink)" /><NavigationProperty Name="StatementExceptionTypeRuleLink" Type="Collection(QMV.Investigate.EntityModel.StatementExceptionTypeRuleLink)" /><NavigationProperty Name="IncidentBreakdown" Type="Collection(QMV.Investigate.EntityModel.IncidentBreakdown)" /><NavigationProperty Name="IssueBreakdown" Type="Collection(QMV.Investigate.EntityModel.IssueBreakdown)" /><NavigationProperty Name="ExecutedScriptByResolutionType" Type="Collection(QMV.Investigate.EntityModel.ExecutedScriptByResolutionType)" /><NavigationProperty Name="ExecutedScriptBySeverityType" Type="Collection(QMV.Investigate.EntityModel.ExecutedScriptBySeverityType)" /></EntityType><EntityType Name="ExecutedRule"><Key><PropertyRef Name="ExecutedRuleId" /></Key><Property Name="ExecutedRuleId" Type="Edm.Int32" Nullable="false" /><Property Name="RuleId" Type="Edm.Int32" Nullable="false" /><Property Name="ExecutedScheduleId" Type="Edm.Int32" /><Property Name="ExecutedPlaylistId" Type="Edm.Int32" /><Property Name="StartDateTime" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="CompletedDateTime" Type="Edm.DateTimeOffset" /><Property Name="ResultCount" Type="Edm.Int32" Nullable="false" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="ExecutedBy" Type="Edm.String" /></EntityType><EntityType Name="Script"><Key><PropertyRef Name="ScriptId" /></Key><Property Name="ScriptId" Type="Edm.Int32" Nullable="false" /><Property Name="RuleId" Type="Edm.Int32" /><Property Name="ApplicationId" Type="Edm.Int32" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><Property Name="ValidityStartDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="ValidityEndDate" Type="Edm.DateTimeOffset" /><Property Name="Script1" Type="Edm.String" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><Property Name="ExecuteOnInvestigate" Type="Edm.Boolean" Nullable="false" /><Property Name="DateReleased" Type="Edm.DateTimeOffset" /><Property Name="DateReviewed" Type="Edm.DateTimeOffset" /><Property Name="LastModifiedDate" Type="Edm.DateTimeOffset" /><Property Name="UriPath" Type="Edm.String" /><Property Name="IsRpcFeeder" Type="Edm.Boolean" Nullable="false" /><Property Name="ConvertResultsToTable" Type="Edm.Boolean" Nullable="false" /><Property Name="EmailResults" Type="Edm.Boolean" Nullable="false" /><Property Name="EmailAddress" Type="Edm.String" /><Property Name="EmailFileType" Type="Edm.Byte" /><Property Name="EmailIncidentStatusCriteria" Type="Edm.String" /><Property Name="UseMasterScript" Type="Edm.Boolean" Nullable="false" /><NavigationProperty Name="Application" Type="QMV.Investigate.EntityModel.Application"><ReferentialConstraint Property="ApplicationId" ReferencedProperty="ApplicationId" /></NavigationProperty><NavigationProperty Name="Issue" Type="Collection(QMV.Investigate.EntityModel.Issue)" /><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty><NavigationProperty Name="ScriptParameter" Type="Collection(QMV.Investigate.EntityModel.ScriptParameter)" /><NavigationProperty Name="ScriptRpcMethod" Type="Collection(QMV.Investigate.EntityModel.ScriptRpcMethod)" /></EntityType><EntityType Name="ExecutedScriptTotal"><Key><PropertyRef Name="ExecutedScriptId" /></Key><Property Name="ExecutedScriptId" Type="Edm.Int32" Nullable="false" /><Property Name="TotalRecordCount" Type="Edm.Int32" Nullable="false" /><Property Name="NewRecordCount" Type="Edm.Int32" Nullable="false" /><Property Name="UnKeyedRecordCount" Type="Edm.Int32" Nullable="false" /><Property Name="KnownRecordCount" Type="Edm.Int32" Nullable="false" /><Property Name="RecurringRecordCount" Type="Edm.Int32" Nullable="false" /><Property Name="ResolvedRecordCount" Type="Edm.Int32" Nullable="false" /></EntityType><EntityType Name="IncidentExecutionResultLink"><Key><PropertyRef Name="IncidentExecutionResultLinkId" /></Key><Property Name="IncidentExecutionResultLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="IncidentId" Type="Edm.Int32" /><Property Name="ExecutionResultId" Type="Edm.Int32" /><Property Name="ScenarioValue" Type="Edm.Int32" /><NavigationProperty Name="ExecutionResult" Type="QMV.Investigate.EntityModel.ExecutionResult"><ReferentialConstraint Property="ExecutionResultId" ReferencedProperty="ExecutionResultId" /></NavigationProperty><NavigationProperty Name="Incident" Type="QMV.Investigate.EntityModel.Incident"><ReferentialConstraint Property="IncidentId" ReferencedProperty="IncidentId" /></NavigationProperty></EntityType><EntityType Name="IncidentScenarioClassificationLink"><Key><PropertyRef Name="IncidentScenarioClassificationLinkId" /></Key><Property Name="IncidentScenarioClassificationLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="IncidentScenarioLinkId" Type="Edm.Int32" /><Property Name="IncidentClassificationId" Type="Edm.Int32" /><Property Name="IncidentClassificationValueId" Type="Edm.Int32" /><NavigationProperty Name="IncidentClassification" Type="QMV.Investigate.EntityModel.IncidentClassification"><ReferentialConstraint Property="IncidentClassificationId" ReferencedProperty="IncidentClassificationId" /></NavigationProperty><NavigationProperty Name="IncidentClassificationValue" Type="QMV.Investigate.EntityModel.IncidentClassificationValue"><ReferentialConstraint Property="IncidentClassificationValueId" ReferencedProperty="IncidentClassificationValueId" /></NavigationProperty><NavigationProperty Name="IncidentScenarioLink" Type="QMV.Investigate.EntityModel.IncidentScenarioLink"><ReferentialConstraint Property="IncidentScenarioLinkId" ReferencedProperty="IncidentScenarioLinkId" /></NavigationProperty></EntityType><EntityType Name="IncidentIncidentClassificationLink"><Key><PropertyRef Name="IncidentIncidentClassificationLinkId" /></Key><Property Name="IncidentIncidentClassificationLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="IncidentId" Type="Edm.Int32" /><Property Name="IncidentClassificationId" Type="Edm.Int32" /><Property Name="IncidentClassificationValueId" Type="Edm.Int32" /><NavigationProperty Name="Incident" Type="QMV.Investigate.EntityModel.Incident"><ReferentialConstraint Property="IncidentId" ReferencedProperty="IncidentId" /></NavigationProperty><NavigationProperty Name="IncidentClassification" Type="QMV.Investigate.EntityModel.IncidentClassification"><ReferentialConstraint Property="IncidentClassificationId" ReferencedProperty="IncidentClassificationId" /></NavigationProperty><NavigationProperty Name="IncidentClassificationValue" Type="QMV.Investigate.EntityModel.IncidentClassificationValue"><ReferentialConstraint Property="IncidentClassificationValueId" ReferencedProperty="IncidentClassificationValueId" /></NavigationProperty></EntityType><EntityType Name="IncidentReportPropertyLink"><Key><PropertyRef Name="IncidentReportPropertyLinkId" /></Key><Property Name="IncidentReportPropertyLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="ReportPropertyId" Type="Edm.Int32" /><Property Name="IncidentId" Type="Edm.Int32" /><Property Name="Value" Type="Edm.String" /><NavigationProperty Name="Incident" Type="QMV.Investigate.EntityModel.Incident"><ReferentialConstraint Property="IncidentId" ReferencedProperty="IncidentId" /></NavigationProperty><NavigationProperty Name="ReportProperty" Type="QMV.Investigate.EntityModel.ReportProperty"><ReferentialConstraint Property="ReportPropertyId" ReferencedProperty="ReportPropertyId" /></NavigationProperty></EntityType><EntityType Name="IncidentScenarioLink"><Key><PropertyRef Name="IncidentScenarioLinkId" /></Key><Property Name="IncidentScenarioLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="IncidentId" Type="Edm.Int32" /><Property Name="CaseIdentifier" Type="Edm.Int32" Nullable="false" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="LastIdentifiedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="SeverityType" Type="Edm.Byte" Nullable="false" /><Property Name="IsAdvancedClassification" Type="Edm.Boolean" Nullable="false" /><Property Name="IsAdvancedClassificationOverriden" Type="Edm.Boolean" Nullable="false" /><Property Name="CalculatedPriority" Type="Edm.Decimal" Nullable="false" /><Property Name="OverridenPriority" Type="Edm.Decimal" /><Property Name="IsDefault" Type="Edm.Boolean" /><NavigationProperty Name="Incident" Type="QMV.Investigate.EntityModel.Incident"><ReferentialConstraint Property="IncidentId" ReferencedProperty="IncidentId" /></NavigationProperty><NavigationProperty Name="IncidentScenarioClassificationLink" Type="Collection(QMV.Investigate.EntityModel.IncidentScenarioClassificationLink)" /></EntityType><EntityType Name="ExecutionResult"><Key><PropertyRef Name="ExecutionResultId" /></Key><Property Name="ExecutionResultId" Type="Edm.Int32" Nullable="false" /><Property Name="ExecutedScriptId" Type="Edm.Int32" Nullable="false" /><Property Name="ResultRowNumber" Type="Edm.Int32" Nullable="false" /><Property Name="ApplicationEntityKeyValue" Type="Edm.String" /><Property Name="ScenarioValue" Type="Edm.Int32" /><Property Name="Priority" Type="Edm.Decimal" /><Property Name="InterrogatedValue" Type="Edm.String" /><Property Name="AdditionalData" Type="Edm.String" /><Property Name="ResultType" Type="Edm.Byte" /><NavigationProperty Name="ResultTypeReference" Type="QMV.Investigate.EntityModel.ResultTypeReference" /><NavigationProperty Name="Incident" Type="Collection(QMV.Investigate.EntityModel.Incident)" /><NavigationProperty Name="IncidentExecutionResultLink" Type="Collection(QMV.Investigate.EntityModel.IncidentExecutionResultLink)" /></EntityType><EntityType Name="Application"><Key><PropertyRef Name="ApplicationId" /></Key><Property Name="ApplicationId" Type="Edm.Int32" Nullable="false" /><Property Name="Name" Type="Edm.String" /><Property Name="ScriptType" Type="Edm.Byte" Nullable="false" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="AllowsRpc" Type="Edm.Boolean" Nullable="false" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><NavigationProperty Name="ApplicationEntity" Type="Collection(QMV.Investigate.EntityModel.ApplicationEntity)" /><NavigationProperty Name="Environment" Type="Collection(QMV.Investigate.EntityModel.Environment)" /><NavigationProperty Name="Incident" Type="Collection(QMV.Investigate.EntityModel.Incident)" /><NavigationProperty Name="Issue" Type="Collection(QMV.Investigate.EntityModel.Issue)" /><NavigationProperty Name="ScheduleEnvironmentLink" Type="Collection(QMV.Investigate.EntityModel.ScheduleEnvironmentLink)" /><NavigationProperty Name="Script" Type="Collection(QMV.Investigate.EntityModel.Script)" /><NavigationProperty Name="StatementScript" Type="Collection(QMV.Investigate.EntityModel.StatementScript)" /></EntityType><EntityType Name="ApplicationEntity"><Key><PropertyRef Name="ApplicationEntityId" /></Key><Property Name="ApplicationEntityId" Type="Edm.Int32" Nullable="false" /><Property Name="ApplicationId" Type="Edm.Int32" /><Property Name="EntityId" Type="Edm.Int32" /><Property Name="Name" Type="Edm.String" /><NavigationProperty Name="Application" Type="QMV.Investigate.EntityModel.Application"><ReferentialConstraint Property="ApplicationId" ReferencedProperty="ApplicationId" /></NavigationProperty><NavigationProperty Name="Entity" Type="QMV.Investigate.EntityModel.Entity"><ReferentialConstraint Property="EntityId" ReferencedProperty="EntityId" /></NavigationProperty><NavigationProperty Name="ApplicationEntityKey" Type="Collection(QMV.Investigate.EntityModel.ApplicationEntityKey)" /><NavigationProperty Name="Incident" Type="Collection(QMV.Investigate.EntityModel.Incident)" /><NavigationProperty Name="Issue" Type="Collection(QMV.Investigate.EntityModel.Issue)" /><NavigationProperty Name="StatementMember" Type="Collection(QMV.Investigate.EntityModel.StatementMember)" /><NavigationProperty Name="IncidentBreakdown" Type="Collection(QMV.Investigate.EntityModel.IncidentBreakdown)" /><NavigationProperty Name="IssueBreakdown" Type="Collection(QMV.Investigate.EntityModel.IssueBreakdown)" /><NavigationProperty Name="ExecutedScriptByResolutionType" Type="Collection(QMV.Investigate.EntityModel.ExecutedScriptByResolutionType)" /><NavigationProperty Name="ExecutedScriptBySeverityType" Type="Collection(QMV.Investigate.EntityModel.ExecutedScriptBySeverityType)" /></EntityType><EntityType Name="Environment"><Key><PropertyRef Name="EnvironmentId" /></Key><Property Name="EnvironmentId" Type="Edm.Int32" Nullable="false" /><Property Name="ApplicationId" Type="Edm.Int32" /><Property Name="Name" Type="Edm.String" /><Property Name="ConnectionString" Type="Edm.String" /><Property Name="DatabaseName" Type="Edm.String" /><Property Name="ExceptionPassword" Type="Edm.String" /><Property Name="WebApiEndpoint" Type="Edm.String" /><NavigationProperty Name="Application" Type="QMV.Investigate.EntityModel.Application"><ReferentialConstraint Property="ApplicationId" ReferencedProperty="ApplicationId" /></NavigationProperty><NavigationProperty Name="EnvironmentApiHeaderValue" Type="Collection(QMV.Investigate.EntityModel.EnvironmentApiHeaderValue)" /><NavigationProperty Name="Incident" Type="Collection(QMV.Investigate.EntityModel.Incident)" /><NavigationProperty Name="Issue" Type="Collection(QMV.Investigate.EntityModel.Issue)" /><NavigationProperty Name="ScheduleEnvironmentLink" Type="Collection(QMV.Investigate.EntityModel.ScheduleEnvironmentLink)" /><NavigationProperty Name="IncidentBreakdown" Type="Collection(QMV.Investigate.EntityModel.IncidentBreakdown)" /><NavigationProperty Name="IssueBreakdown" Type="Collection(QMV.Investigate.EntityModel.IssueBreakdown)" /><NavigationProperty Name="ExecutedScriptByResolutionType" Type="Collection(QMV.Investigate.EntityModel.ExecutedScriptByResolutionType)" /><NavigationProperty Name="ExecutedScriptBySeverityType" Type="Collection(QMV.Investigate.EntityModel.ExecutedScriptBySeverityType)" /></EntityType><EntityType Name="Issue"><Key><PropertyRef Name="IssueId" /></Key><Property Name="IssueId" Type="Edm.Int32" Nullable="false" /><Property Name="FunctionalAreaId" Type="Edm.Int32" /><Property Name="DisplayCode" Type="Edm.String" /><Property Name="Name" Type="Edm.String" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="IssueType" Type="Edm.Byte" Nullable="false" /><Property Name="Priority" Type="Edm.Decimal" /><Property Name="AssignedTo" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="UpdatedBy" Type="Edm.String" /><Property Name="UpdatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="RuleId" Type="Edm.Int32" /><Property Name="ScriptId" Type="Edm.Int32" /><Property Name="ApplicationId" Type="Edm.Int32" /><Property Name="EnvironmentId" Type="Edm.Int32" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><NavigationProperty Name="Application" Type="QMV.Investigate.EntityModel.Application"><ReferentialConstraint Property="ApplicationId" ReferencedProperty="ApplicationId" /></NavigationProperty><NavigationProperty Name="ApplicationEntity" Type="QMV.Investigate.EntityModel.ApplicationEntity"><ReferentialConstraint Property="ApplicationEntityId" ReferencedProperty="ApplicationEntityId" /></NavigationProperty><NavigationProperty Name="Environment" Type="QMV.Investigate.EntityModel.Environment"><ReferentialConstraint Property="EnvironmentId" ReferencedProperty="EnvironmentId" /></NavigationProperty><NavigationProperty Name="Incident" Type="Collection(QMV.Investigate.EntityModel.Incident)" /><NavigationProperty Name="ResolveStatusTypeReference" Type="QMV.Investigate.EntityModel.ResolveStatusTypeReference" /><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty><NavigationProperty Name="Script" Type="QMV.Investigate.EntityModel.Script"><ReferentialConstraint Property="ScriptId" ReferencedProperty="ScriptId" /></NavigationProperty><NavigationProperty Name="IssueReportPropertyLink" Type="Collection(QMV.Investigate.EntityModel.IssueReportPropertyLink)" /><NavigationProperty Name="IncidentBreakdown" Type="Collection(QMV.Investigate.EntityModel.IncidentBreakdown)" /></EntityType><EntityType Name="ExecutedScript"><Key><PropertyRef Name="ExecutedScriptId" /></Key><Property Name="ExecutedScriptId" Type="Edm.Int32" Nullable="false" /><Property Name="ExecutedRuleId" Type="Edm.Int32" Nullable="false" /><Property Name="ScriptId" Type="Edm.Int32" Nullable="false" /><Property Name="ApplicationId" Type="Edm.Int32" Nullable="false" /><Property Name="EnvironmentId" Type="Edm.Int32" Nullable="false" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><Property Name="StartDateTime" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="CompletedDateTime" Type="Edm.DateTimeOffset" /><Property Name="ResultCount" Type="Edm.Int32" Nullable="false" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /></EntityType><EntityType Name="StatementPeriodMemberLink"><Key><PropertyRef Name="StatementPeriodMemberLinkId" /></Key><Property Name="StatementPeriodMemberLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementPeriodId" Type="Edm.Int32" /><Property Name="StatementMemberId" Type="Edm.Int32" /><Property Name="LastProcessedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="LastActionType" Type="Edm.Byte" Nullable="false" /><Property Name="StatementStatusTypeId" Type="Edm.Int32" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="UpdatedBy" Type="Edm.String" /><Property Name="UpdatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="StatementStatusSubTypeId" Type="Edm.Int32" /><Property Name="StatementPeriodReleaseId" Type="Edm.Int32" /><NavigationProperty Name="StatementMember" Type="QMV.Investigate.EntityModel.StatementMember"><ReferentialConstraint Property="StatementMemberId" ReferencedProperty="StatementMemberId" /></NavigationProperty><NavigationProperty Name="StatementPeriod" Type="QMV.Investigate.EntityModel.StatementPeriod"><ReferentialConstraint Property="StatementPeriodId" ReferencedProperty="StatementPeriodId" /></NavigationProperty><NavigationProperty Name="StatementPeriodMemberExceptionLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberExceptionLink)" /><NavigationProperty Name="StatementStatusType" Type="QMV.Investigate.EntityModel.StatementStatusType"><ReferentialConstraint Property="StatementStatusTypeId" ReferencedProperty="StatementStatusTypeId" /></NavigationProperty><NavigationProperty Name="StatementPeriodMemberLinkItemHistory" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLinkItemHistory)" /><NavigationProperty Name="StatementPeriodMemberReleaseLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberReleaseLink)" /><NavigationProperty Name="StatementPeriodRelease" Type="QMV.Investigate.EntityModel.StatementPeriodRelease"><ReferentialConstraint Property="StatementPeriodReleaseId" ReferencedProperty="StatementPeriodReleaseId" /></NavigationProperty><NavigationProperty Name="StatementStatusSubType" Type="QMV.Investigate.EntityModel.StatementStatusSubType"><ReferentialConstraint Property="StatementStatusSubTypeId" ReferencedProperty="StatementStatusSubTypeId" /></NavigationProperty></EntityType><EntityType Name="StatementPeriodMemberExceptionLink"><Key><PropertyRef Name="StatementPeriodMemberExceptionLinkId" /></Key><Property Name="StatementPeriodMemberExceptionLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementPeriodMemberLinkId" Type="Edm.Int32" /><Property Name="StatementExceptionTypeId" Type="Edm.Int32" /><Property Name="IdentifiedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="ExceptionSourceType" Type="Edm.Byte" Nullable="false" /><Property Name="ResolvedDate" Type="Edm.DateTimeOffset" /><Property Name="AssignedTo" Type="Edm.String" /><Property Name="LastExecutionResultId" Type="Edm.Int32" /><Property Name="LastIdentifiedByExecution" Type="Edm.DateTimeOffset" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="UpdatedBy" Type="Edm.String" /><Property Name="UpdatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="StatementReportCodeId" Type="Edm.Int32" /><Property Name="IncidentId" Type="Edm.Int32" /><Property Name="RuleId" Type="Edm.Int32" /><NavigationProperty Name="StatementExceptionType" Type="QMV.Investigate.EntityModel.StatementExceptionType"><ReferentialConstraint Property="StatementExceptionTypeId" ReferencedProperty="StatementExceptionTypeId" /></NavigationProperty><NavigationProperty Name="StatementPeriodMemberLink" Type="QMV.Investigate.EntityModel.StatementPeriodMemberLink"><ReferentialConstraint Property="StatementPeriodMemberLinkId" ReferencedProperty="StatementPeriodMemberLinkId" /></NavigationProperty></EntityType><EntityType Name="ExecutedScriptBySeverityType"><Key><PropertyRef Name="ExecutedScriptId" /></Key><Property Name="ExecutedScriptId" Type="Edm.Int32" Nullable="false" /><Property Name="StartDate" Type="Edm.DateTimeOffset" /><Property Name="StartDateYearMonth" Type="Edm.String" /><Property Name="StartDateYear" Type="Edm.Int32" /><Property Name="StartDateMonth" Type="Edm.Int32" /><Property Name="StartDateDayOfMonth" Type="Edm.Int32" /><Property Name="SeverityType" Type="Edm.Byte" Nullable="false" /><Property Name="RecordCount" Type="Edm.Int32" /><Property Name="RuleId" Type="Edm.Int32" /><Property Name="FunctionalAreaId" Type="Edm.Int32" /><Property Name="EnvironmentId" Type="Edm.Int32" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><Property Name="IsUnclassified" Type="Edm.Int32" Nullable="false" /><Property Name="IsLow" Type="Edm.Int32" Nullable="false" /><Property Name="IsMedium" Type="Edm.Int32" Nullable="false" /><Property Name="IsHigh" Type="Edm.Int32" Nullable="false" /><Property Name="StartDateText" Type="Edm.String" /><NavigationProperty Name="SeverityTypeReference" Type="QMV.Investigate.EntityModel.SeverityTypeReference" /><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty><NavigationProperty Name="FunctionalArea" Type="QMV.Investigate.EntityModel.FunctionalArea"><ReferentialConstraint Property="FunctionalAreaId" ReferencedProperty="FunctionalAreaId" /></NavigationProperty><NavigationProperty Name="Environment" Type="QMV.Investigate.EntityModel.Environment"><ReferentialConstraint Property="EnvironmentId" ReferencedProperty="EnvironmentId" /></NavigationProperty><NavigationProperty Name="ApplicationEntity" Type="QMV.Investigate.EntityModel.ApplicationEntity"><ReferentialConstraint Property="ApplicationEntityId" ReferencedProperty="ApplicationEntityId" /></NavigationProperty></EntityType><EntityType Name="ExecutedScriptByResolutionType"><Key><PropertyRef Name="ExecutedScriptId" /></Key><Property Name="ExecutedScriptId" Type="Edm.Int32" Nullable="false" /><Property Name="StartDate" Type="Edm.DateTimeOffset" /><Property Name="StartDateYearMonth" Type="Edm.String" /><Property Name="StartDateYear" Type="Edm.Int32" /><Property Name="StartDateMonth" Type="Edm.Int32" /><Property Name="StartDateDayOfMonth" Type="Edm.Int32" /><Property Name="NewRecordCount" Type="Edm.Int32" /><Property Name="UnKeyedRecordCount" Type="Edm.Int32" /><Property Name="KnownRecordCount" Type="Edm.Int32" /><Property Name="RecurringRecordCount" Type="Edm.Int32" /><Property Name="ResolvedRecordCount" Type="Edm.Int32" /><Property Name="RuleId" Type="Edm.Int32" /><Property Name="FunctionalAreaId" Type="Edm.Int32" /><Property Name="EnvironmentId" Type="Edm.Int32" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><Property Name="StartDateText" Type="Edm.String" /><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty><NavigationProperty Name="FunctionalArea" Type="QMV.Investigate.EntityModel.FunctionalArea"><ReferentialConstraint Property="FunctionalAreaId" ReferencedProperty="FunctionalAreaId" /></NavigationProperty><NavigationProperty Name="Environment" Type="QMV.Investigate.EntityModel.Environment"><ReferentialConstraint Property="EnvironmentId" ReferencedProperty="EnvironmentId" /></NavigationProperty><NavigationProperty Name="ApplicationEntity" Type="QMV.Investigate.EntityModel.ApplicationEntity"><ReferentialConstraint Property="ApplicationEntityId" ReferencedProperty="ApplicationEntityId" /></NavigationProperty></EntityType><EntityType Name="IssueBreakdown"><Key><PropertyRef Name="IssueId" /></Key><Property Name="IssueId" Type="Edm.Int32" Nullable="false" /><Property Name="SeverityType" Type="Edm.Byte" /><Property Name="IsUnclassified" Type="Edm.Int32" Nullable="false" /><Property Name="IsLow" Type="Edm.Int32" Nullable="false" /><Property Name="IsMedium" Type="Edm.Int32" Nullable="false" /><Property Name="IsHigh" Type="Edm.Int32" Nullable="false" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="IsDraft" Type="Edm.Int32" Nullable="false" /><Property Name="IsActive" Type="Edm.Int32" Nullable="false" /><Property Name="IsPending" Type="Edm.Int32" Nullable="false" /><Property Name="IsSuppressed" Type="Edm.Int32" Nullable="false" /><Property Name="IsClosed" Type="Edm.Int32" Nullable="false" /><Property Name="IsDeferred" Type="Edm.Int32" Nullable="false" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="CreatedDateYearMonth" Type="Edm.String" /><Property Name="CreatedDateYear" Type="Edm.Int32" /><Property Name="CreatedDateMonth" Type="Edm.Int32" /><Property Name="CreatedDateDayOfMonth" Type="Edm.Int32" /><Property Name="AssignedTo" Type="Edm.String" /><Property Name="RuleId" Type="Edm.Int32" /><Property Name="FunctionalAreaId" Type="Edm.Int32" /><Property Name="EnvironmentId" Type="Edm.Int32" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><Property Name="CreatedDateText" Type="Edm.String" /><NavigationProperty Name="SeverityTypeReference" Type="QMV.Investigate.EntityModel.SeverityTypeReference" /><NavigationProperty Name="ResolveStatusTypeReference" Type="QMV.Investigate.EntityModel.ResolveStatusTypeReference" /><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty><NavigationProperty Name="FunctionalArea" Type="QMV.Investigate.EntityModel.FunctionalArea"><ReferentialConstraint Property="FunctionalAreaId" ReferencedProperty="FunctionalAreaId" /></NavigationProperty><NavigationProperty Name="Environment" Type="QMV.Investigate.EntityModel.Environment"><ReferentialConstraint Property="EnvironmentId" ReferencedProperty="EnvironmentId" /></NavigationProperty><NavigationProperty Name="ApplicationEntity" Type="QMV.Investigate.EntityModel.ApplicationEntity"><ReferentialConstraint Property="ApplicationEntityId" ReferencedProperty="ApplicationEntityId" /></NavigationProperty></EntityType><EntityType Name="IncidentBreakdown"><Key><PropertyRef Name="IncidentId" /></Key><Property Name="IncidentId" Type="Edm.Int32" Nullable="false" /><Property Name="SeverityType" Type="Edm.Byte" Nullable="false" /><Property Name="IsUnclassified" Type="Edm.Int32" Nullable="false" /><Property Name="IsLow" Type="Edm.Int32" Nullable="false" /><Property Name="IsMedium" Type="Edm.Int32" Nullable="false" /><Property Name="IsHigh" Type="Edm.Int32" Nullable="false" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="IsDraft" Type="Edm.Int32" Nullable="false" /><Property Name="IsActive" Type="Edm.Int32" Nullable="false" /><Property Name="IsPending" Type="Edm.Int32" Nullable="false" /><Property Name="IsSuppressed" Type="Edm.Int32" Nullable="false" /><Property Name="IsClosed" Type="Edm.Int32" Nullable="false" /><Property Name="IsDeferred" Type="Edm.Int32" Nullable="false" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="CreatedDateYearMonth" Type="Edm.String" /><Property Name="CreatedDateYear" Type="Edm.Int32" /><Property Name="CreatedDateMonth" Type="Edm.Int32" /><Property Name="CreatedDateDayOfMonth" Type="Edm.Int32" /><Property Name="AssignedTo" Type="Edm.String" /><Property Name="IssueAssignedTo" Type="Edm.String" /><Property Name="IssueId" Type="Edm.Int32" /><Property Name="RuleId" Type="Edm.Int32" /><Property Name="FunctionalAreaId" Type="Edm.Int32" /><Property Name="EnvironmentId" Type="Edm.Int32" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><Property Name="CreatedDateText" Type="Edm.String" /><NavigationProperty Name="ResolveStatusTypeReference" Type="QMV.Investigate.EntityModel.ResolveStatusTypeReference" /><NavigationProperty Name="SeverityTypeReference" Type="QMV.Investigate.EntityModel.SeverityTypeReference" /><NavigationProperty Name="Issue" Type="QMV.Investigate.EntityModel.Issue"><ReferentialConstraint Property="IssueId" ReferencedProperty="IssueId" /></NavigationProperty><NavigationProperty Name="ApplicationEntity" Type="QMV.Investigate.EntityModel.ApplicationEntity"><ReferentialConstraint Property="ApplicationEntityId" ReferencedProperty="ApplicationEntityId" /></NavigationProperty><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty><NavigationProperty Name="FunctionalArea" Type="QMV.Investigate.EntityModel.FunctionalArea"><ReferentialConstraint Property="FunctionalAreaId" ReferencedProperty="FunctionalAreaId" /></NavigationProperty><NavigationProperty Name="Environment" Type="QMV.Investigate.EntityModel.Environment"><ReferentialConstraint Property="EnvironmentId" ReferencedProperty="EnvironmentId" /></NavigationProperty></EntityType><ComplexType Name="IncidentAgeingByStatus"><Property Name="EffectiveDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="EffectiveDateText" Type="Edm.String" /><Property Name="EffectiveMonth" Type="Edm.String" /><Property Name="ActiveColor" Type="Edm.String" /><Property Name="ActiveCount" Type="Edm.Int32" Nullable="false" /><Property Name="PendingColor" Type="Edm.String" /><Property Name="PendingCount" Type="Edm.Int32" Nullable="false" /><Property Name="DeferredColor" Type="Edm.String" /><Property Name="DeferredCount" Type="Edm.Int32" Nullable="false" /></ComplexType><ComplexType Name="IncidentResolutionHistory"><Property Name="EffectiveDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="EffectiveDateText" Type="Edm.String" /><Property Name="NewCount" Type="Edm.Int32" Nullable="false" /><Property Name="NewColor" Type="Edm.String" /><Property Name="OpenCount" Type="Edm.Int32" Nullable="false" /><Property Name="OpenColor" Type="Edm.String" /><Property Name="ClosedCount" Type="Edm.Int32" Nullable="false" /><Property Name="ClosedColor" Type="Edm.String" /><Property Name="ReopenedCount" Type="Edm.Int32" Nullable="false" /><Property Name="ReopenedColor" Type="Edm.String" /></ComplexType><ComplexType Name="IncidentNewVsResolved"><Property Name="EffectiveDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="EffectiveDateText" Type="Edm.String" /><Property Name="EffectiveMonth" Type="Edm.String" /><Property Name="NewColor" Type="Edm.String" /><Property Name="NewCount" Type="Edm.Int32" Nullable="false" /><Property Name="ResolvedColor" Type="Edm.String" /><Property Name="ResolvedCount" Type="Edm.Int32" Nullable="false" /></ComplexType><ComplexType Name="EntityEventLinkItemHistory"><Property Name="StatementStatusTypeId" Type="Edm.Int32" Nullable="false" /><Property Name="EffectiveDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="EnvironmentId" Type="Edm.Int32" Nullable="false" /><Property Name="Occurrence" Type="Edm.Int32" Nullable="false" /></ComplexType><ComplexType Name="IncidentDayAgeing"><Property Name="DaysActiveType" Type="Edm.Byte" Nullable="false" /><Property Name="DaysActiveText" Type="Edm.String" /><Property Name="DaysActiveColor" Type="Edm.String" /><Property Name="RecordCount" Type="Edm.Int32" Nullable="false" /></ComplexType><ComplexType Name="IncidentBreakdownProcedure"><Property Name="AssignedTo" Type="Edm.String" /><Property Name="ApplicationEntityId" Type="Edm.Int32" Nullable="false" /><Property Name="FunctionalAreaId" Type="Edm.Int32" Nullable="false" /><Property Name="EnvironmentId" Type="Edm.Int32" Nullable="false" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="SeverityType" Type="Edm.Byte" Nullable="false" /><Property Name="RecordCount" Type="Edm.Int32" Nullable="false" /><NavigationProperty Name="ResolveStatusTypeReference" Type="QMV.Investigate.EntityModel.ResolveStatusTypeReference" /></ComplexType><ComplexType Name="OverallHealth"><Property Name="ActiveIssueList" Type="Collection(QMV.Investigate.EntityModel.ItemBreakdown)" /><Property Name="ActiveRuleExecutedList" Type="Collection(QMV.Investigate.EntityModel.ItemBreakdown)" /><Property Name="ActiveRuleExecutedTrendList" Type="Collection(QMV.Investigate.EntityModel.ActiveRuleExecutedTrend)" /></ComplexType><EntityType Name="Color"><Key><PropertyRef Name="ColorId" /></Key><Property Name="ColorId" Type="Edm.Int32" Nullable="false" /><Property Name="Name" Type="Edm.String" /><Property Name="RGBA" Type="Edm.String" /><Property Name="IsSystem" Type="Edm.Boolean" Nullable="false" /><NavigationProperty Name="EntityColorReference" Type="Collection(QMV.Investigate.EntityModel.EntityColorReference)" /><NavigationProperty Name="ResolutionTypeReference" Type="Collection(QMV.Investigate.EntityModel.ResolutionTypeReference)" /><NavigationProperty Name="ResolveStatusTypeReference" Type="Collection(QMV.Investigate.EntityModel.ResolveStatusTypeReference)" /><NavigationProperty Name="ResultTypeReference" Type="Collection(QMV.Investigate.EntityModel.ResultTypeReference)" /><NavigationProperty Name="SeverityTypeReference" Type="Collection(QMV.Investigate.EntityModel.SeverityTypeReference)" /></EntityType><EntityType Name="Entity"><Key><PropertyRef Name="EntityId" /></Key><Property Name="EntityId" Type="Edm.Int32" Nullable="false" /><Property Name="Name" Type="Edm.String" /><NavigationProperty Name="ApplicationEntity" Type="Collection(QMV.Investigate.EntityModel.ApplicationEntity)" /></EntityType><EntityType Name="ApplicationEntityKey"><Key><PropertyRef Name="ApplicationEntityKeyId" /></Key><Property Name="ApplicationEntityKeyId" Type="Edm.Int32" Nullable="false" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><Property Name="ColumnName" Type="Edm.String" /><Property Name="DisplayName" Type="Edm.String" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><NavigationProperty Name="ApplicationEntity" Type="QMV.Investigate.EntityModel.ApplicationEntity"><ReferentialConstraint Property="ApplicationEntityId" ReferencedProperty="ApplicationEntityId" /></NavigationProperty></EntityType><EntityType Name="EnvironmentApiHeaderValue"><Key><PropertyRef Name="EnvironmentApiHeaderValueId" /></Key><Property Name="EnvironmentApiHeaderValueId" Type="Edm.Int32" Nullable="false" /><Property Name="EnvironmentId" Type="Edm.Int32" /><Property Name="HeaderName" Type="Edm.String" /><Property Name="HeaderValue" Type="Edm.String" /><NavigationProperty Name="Environment" Type="QMV.Investigate.EntityModel.Environment"><ReferentialConstraint Property="EnvironmentId" ReferencedProperty="EnvironmentId" /></NavigationProperty></EntityType><EntityType Name="ScheduleEnvironmentLink"><Key><PropertyRef Name="ScheduleEnvironmentLinkId" /></Key><Property Name="ScheduleEnvironmentLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="ScheduleId" Type="Edm.Int32" /><Property Name="ApplicationId" Type="Edm.Int32" /><Property Name="EnvironmentId" Type="Edm.Int32" /><NavigationProperty Name="Application" Type="QMV.Investigate.EntityModel.Application"><ReferentialConstraint Property="ApplicationId" ReferencedProperty="ApplicationId" /></NavigationProperty><NavigationProperty Name="Environment" Type="QMV.Investigate.EntityModel.Environment"><ReferentialConstraint Property="EnvironmentId" ReferencedProperty="EnvironmentId" /></NavigationProperty><NavigationProperty Name="Schedule" Type="QMV.Investigate.EntityModel.Schedule"><ReferentialConstraint Property="ScheduleId" ReferencedProperty="ScheduleId" /></NavigationProperty></EntityType><EntityType Name="Schedule"><Key><PropertyRef Name="ScheduleId" /></Key><Property Name="ScheduleId" Type="Edm.Int32" Nullable="false" /><Property Name="DisplayCode" Type="Edm.String" /><Property Name="Name" Type="Edm.String" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="Description" Type="Edm.String" /><Property Name="ScheduleType" Type="Edm.Byte" Nullable="false" /><Property Name="StartDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="StartWindowTime" Type="Edm.Duration" Nullable="false" /><Property Name="EndWindowTime" Type="Edm.Duration" /><Property Name="Reoccurance" Type="Edm.Int32" /><Property Name="WeekDayFlag" Type="Edm.Int32" /><Property Name="MonthFlag" Type="Edm.Int32" /><Property Name="MonthScheduleType" Type="Edm.Byte" /><Property Name="MonthDayFlag" Type="Edm.Int32" /><Property Name="LastDayOfMonth" Type="Edm.Boolean" /><Property Name="MonthWeekDayFlag" Type="Edm.Int32" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="UpdatedBy" Type="Edm.String" /><Property Name="UpdatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="EmailOnSuccessfulExecution" Type="Edm.Boolean" Nullable="false" /><Property Name="OnSuccessfulEmailAddressTo" Type="Edm.String" /><Property Name="EmailOnFailedExecution" Type="Edm.Boolean" Nullable="false" /><Property Name="OnFailedEmailAddressTo" Type="Edm.String" /><NavigationProperty Name="ScheduleEnvironmentLink" Type="Collection(QMV.Investigate.EntityModel.ScheduleEnvironmentLink)" /><NavigationProperty Name="ScheduleLink" Type="Collection(QMV.Investigate.EntityModel.ScheduleLink)" /></EntityType><EntityType Name="ScheduleLink"><Key><PropertyRef Name="ScheduleLinkId" /></Key><Property Name="ScheduleLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="ScheduleId" Type="Edm.Int32" /><Property Name="ReferenceId" Type="Edm.Int32" Nullable="false" /><Property Name="ReferenceType" Type="Edm.Byte" Nullable="false" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><NavigationProperty Name="Schedule" Type="QMV.Investigate.EntityModel.Schedule"><ReferentialConstraint Property="ScheduleId" ReferencedProperty="ScheduleId" /></NavigationProperty></EntityType><EntityType Name="FunctionalArea"><Key><PropertyRef Name="FunctionalAreaId" /></Key><Property Name="FunctionalAreaId" Type="Edm.Int32" Nullable="false" /><Property Name="Name" Type="Edm.String" /><Property Name="Active" Type="Edm.Boolean" Nullable="false" /><NavigationProperty Name="Rule" Type="Collection(QMV.Investigate.EntityModel.Rule)" /><NavigationProperty Name="IncidentBreakdown" Type="Collection(QMV.Investigate.EntityModel.IncidentBreakdown)" /><NavigationProperty Name="IssueBreakdown" Type="Collection(QMV.Investigate.EntityModel.IssueBreakdown)" /><NavigationProperty Name="ExecutedScriptByResolutionType" Type="Collection(QMV.Investigate.EntityModel.ExecutedScriptByResolutionType)" /><NavigationProperty Name="ExecutedScriptBySeverityType" Type="Collection(QMV.Investigate.EntityModel.ExecutedScriptBySeverityType)" /></EntityType><EntityType Name="RuleDetail"><Key><PropertyRef Name="RuleDetailId" /></Key><Property Name="RuleDetailId" Type="Edm.Int32" Nullable="false" /><Property Name="RuleId" Type="Edm.Int32" /><Property Name="RuleDetailType" Type="Edm.Byte" Nullable="false" /><Property Name="DetailDescription" Type="Edm.String" /><Property Name="ModifiedDate" Type="Edm.DateTimeOffset" Nullable="false" /><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty></EntityType><EntityType Name="RuleReportPropertyLink"><Key><PropertyRef Name="RuleReportPropertyLinkId" /></Key><Property Name="RuleReportPropertyLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="ReportPropertyId" Type="Edm.Int32" /><Property Name="RuleId" Type="Edm.Int32" /><Property Name="Value" Type="Edm.String" /><NavigationProperty Name="ReportProperty" Type="QMV.Investigate.EntityModel.ReportProperty"><ReferentialConstraint Property="ReportPropertyId" ReferencedProperty="ReportPropertyId" /></NavigationProperty><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty></EntityType><EntityType Name="ReportProperty"><Key><PropertyRef Name="ReportPropertyId" /></Key><Property Name="ReportPropertyId" Type="Edm.Int32" Nullable="false" /><Property Name="Name" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="ValueType" Type="Edm.Byte" Nullable="false" /><Property Name="Active" Type="Edm.Boolean" Nullable="false" /><Property Name="UsageFlag" Type="Edm.Int32" Nullable="false" /><NavigationProperty Name="IncidentReportPropertyLink" Type="Collection(QMV.Investigate.EntityModel.IncidentReportPropertyLink)" /><NavigationProperty Name="IssueReportPropertyLink" Type="Collection(QMV.Investigate.EntityModel.IssueReportPropertyLink)" /><NavigationProperty Name="RuleReportPropertyLink" Type="Collection(QMV.Investigate.EntityModel.RuleReportPropertyLink)" /></EntityType><EntityType Name="IssueReportPropertyLink"><Key><PropertyRef Name="IssueReportPropertyLinkId" /></Key><Property Name="IssueReportPropertyLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="ReportPropertyId" Type="Edm.Int32" /><Property Name="IssueId" Type="Edm.Int32" /><Property Name="Value" Type="Edm.String" /><NavigationProperty Name="Issue" Type="QMV.Investigate.EntityModel.Issue"><ReferentialConstraint Property="IssueId" ReferencedProperty="IssueId" /></NavigationProperty><NavigationProperty Name="ReportProperty" Type="QMV.Investigate.EntityModel.ReportProperty"><ReferentialConstraint Property="ReportPropertyId" ReferencedProperty="ReportPropertyId" /></NavigationProperty></EntityType><EntityType Name="Scenario"><Key><PropertyRef Name="ScenarioId" /></Key><Property Name="ScenarioId" Type="Edm.Int32" Nullable="false" /><Property Name="RuleId" Type="Edm.Int32" /><Property Name="Description" Type="Edm.String" /><Property Name="CaseIdentifier" Type="Edm.Int32" Nullable="false" /><Property Name="SeverityType" Type="Edm.Byte" Nullable="false" /><Property Name="IsAdvancedClassification" Type="Edm.Boolean" Nullable="false" /><Property Name="AutoClose" Type="Edm.Boolean" Nullable="false" /><Property Name="AssignedTo" Type="Edm.String" /><Property Name="EmailNotification" Type="Edm.Boolean" Nullable="false" /><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty><NavigationProperty Name="ScenarioIncidentClassification" Type="Collection(QMV.Investigate.EntityModel.ScenarioIncidentClassification)" /></EntityType><EntityType Name="ScenarioIncidentClassification"><Key><PropertyRef Name="ScenarioIncidentClassificationId" /></Key><Property Name="ScenarioIncidentClassificationId" Type="Edm.Int32" Nullable="false" /><Property Name="ScenarioId" Type="Edm.Int32" /><Property Name="IncidentClassificationId" Type="Edm.Int32" /><Property Name="IncidentClassificationValueId" Type="Edm.Int32" /><NavigationProperty Name="IncidentClassification" Type="QMV.Investigate.EntityModel.IncidentClassification"><ReferentialConstraint Property="IncidentClassificationId" ReferencedProperty="IncidentClassificationId" /></NavigationProperty><NavigationProperty Name="IncidentClassificationValue" Type="QMV.Investigate.EntityModel.IncidentClassificationValue"><ReferentialConstraint Property="IncidentClassificationValueId" ReferencedProperty="IncidentClassificationValueId" /></NavigationProperty><NavigationProperty Name="Scenario" Type="QMV.Investigate.EntityModel.Scenario"><ReferentialConstraint Property="ScenarioId" ReferencedProperty="ScenarioId" /></NavigationProperty></EntityType><EntityType Name="IncidentClassification"><Key><PropertyRef Name="IncidentClassificationId" /></Key><Property Name="IncidentClassificationId" Type="Edm.Int32" Nullable="false" /><Property Name="Name" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="ColumnName" Type="Edm.String" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><NavigationProperty Name="IncidentClassificationValue" Type="Collection(QMV.Investigate.EntityModel.IncidentClassificationValue)" /><NavigationProperty Name="IncidentIncidentClassificationLink" Type="Collection(QMV.Investigate.EntityModel.IncidentIncidentClassificationLink)" /><NavigationProperty Name="IncidentScenarioClassificationLink" Type="Collection(QMV.Investigate.EntityModel.IncidentScenarioClassificationLink)" /><NavigationProperty Name="ScenarioIncidentClassification" Type="Collection(QMV.Investigate.EntityModel.ScenarioIncidentClassification)" /></EntityType><EntityType Name="IncidentClassificationValue"><Key><PropertyRef Name="IncidentClassificationValueId" /></Key><Property Name="IncidentClassificationValueId" Type="Edm.Int32" Nullable="false" /><Property Name="IncidentClassificationId" Type="Edm.Int32" /><Property Name="Name" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="Weighting" Type="Edm.Decimal" Nullable="false" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><NavigationProperty Name="IncidentClassification" Type="QMV.Investigate.EntityModel.IncidentClassification"><ReferentialConstraint Property="IncidentClassificationId" ReferencedProperty="IncidentClassificationId" /></NavigationProperty><NavigationProperty Name="IncidentIncidentClassificationLink" Type="Collection(QMV.Investigate.EntityModel.IncidentIncidentClassificationLink)" /><NavigationProperty Name="IncidentScenarioClassificationLink" Type="Collection(QMV.Investigate.EntityModel.IncidentScenarioClassificationLink)" /><NavigationProperty Name="ScenarioIncidentClassification" Type="Collection(QMV.Investigate.EntityModel.ScenarioIncidentClassification)" /></EntityType><EntityType Name="ScriptParameter"><Key><PropertyRef Name="ScriptParameterId" /></Key><Property Name="ScriptParameterId" Type="Edm.Int32" Nullable="false" /><Property Name="ScriptId" Type="Edm.Int32" /><Property Name="ScriptReference" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="DefaultValue" Type="Edm.String" /><NavigationProperty Name="Script" Type="QMV.Investigate.EntityModel.Script"><ReferentialConstraint Property="ScriptId" ReferencedProperty="ScriptId" /></NavigationProperty></EntityType><EntityType Name="ScriptRpcMethod"><Key><PropertyRef Name="ScriptRpcMethodId" /></Key><Property Name="ScriptRpcMethodId" Type="Edm.Int32" Nullable="false" /><Property Name="ScriptId" Type="Edm.Int32" /><Property Name="MethodType" Type="Edm.Byte" Nullable="false" /><Property Name="ConfigName" Type="Edm.String" /><Property Name="TruncateIfExists" Type="Edm.Boolean" Nullable="false" /><Property Name="ThreadingType" Type="Edm.Byte" Nullable="false" /><NavigationProperty Name="Script" Type="QMV.Investigate.EntityModel.Script"><ReferentialConstraint Property="ScriptId" ReferencedProperty="ScriptId" /></NavigationProperty><NavigationProperty Name="ScriptRpcMethodParameter" Type="Collection(QMV.Investigate.EntityModel.ScriptRpcMethodParameter)" /></EntityType><EntityType Name="ScriptRpcMethodParameter"><Key><PropertyRef Name="ScriptRpcMethodParameterId" /></Key><Property Name="ScriptRpcMethodParameterId" Type="Edm.Int32" Nullable="false" /><Property Name="ScriptRpcMethodId" Type="Edm.Int32" /><Property Name="ParameterName" Type="Edm.String" /><Property Name="ParameterValue" Type="Edm.String" /><NavigationProperty Name="ScriptRpcMethod" Type="QMV.Investigate.EntityModel.ScriptRpcMethod"><ReferentialConstraint Property="ScriptRpcMethodId" ReferencedProperty="ScriptRpcMethodId" /></NavigationProperty></EntityType><EntityType Name="StatementExceptionLinkExecutionResultLink"><Key><PropertyRef Name="StatementExceptionLinkExecutionResultLinkId" /></Key><Property Name="StatementExceptionLinkExecutionResultLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementPeriodMemberExceptionLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="ExecutionResultId" Type="Edm.Int32" Nullable="false" /><Property Name="RuleId" Type="Edm.Int32" /><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty></EntityType><EntityType Name="StatementExceptionTypeRuleLink"><Key><PropertyRef Name="StatementExceptionTypeRuleLinkId" /></Key><Property Name="StatementExceptionTypeRuleLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementExceptionTypeId" Type="Edm.Int32" /><Property Name="RuleId" Type="Edm.Int32" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><NavigationProperty Name="Rule" Type="QMV.Investigate.EntityModel.Rule"><ReferentialConstraint Property="RuleId" ReferencedProperty="RuleId" /></NavigationProperty><NavigationProperty Name="StatementExceptionType" Type="QMV.Investigate.EntityModel.StatementExceptionType"><ReferentialConstraint Property="StatementExceptionTypeId" ReferencedProperty="StatementExceptionTypeId" /></NavigationProperty></EntityType><EntityType Name="StatementExceptionType"><Key><PropertyRef Name="StatementExceptionTypeId" /></Key><Property Name="StatementExceptionTypeId" Type="Edm.Int32" Nullable="false" /><Property Name="Name" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="AssignedTo" Type="Edm.String" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="UpdatedBy" Type="Edm.String" /><Property Name="UpdatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><NavigationProperty Name="StatementExceptionTypeDetail" Type="Collection(QMV.Investigate.EntityModel.StatementExceptionTypeDetail)" /><NavigationProperty Name="StatementExceptionTypeRuleLink" Type="Collection(QMV.Investigate.EntityModel.StatementExceptionTypeRuleLink)" /><NavigationProperty Name="StatementPeriodExceptionTypeLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodExceptionTypeLink)" /><NavigationProperty Name="StatementPeriodMemberExceptionLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberExceptionLink)" /></EntityType><EntityType Name="StatementExceptionTypeDetail"><Key><PropertyRef Name="StatementExceptionTypeDetailId" /></Key><Property Name="StatementExceptionTypeDetailId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementExceptionTypeId" Type="Edm.Int32" /><Property Name="DetailDescription" Type="Edm.String" /><NavigationProperty Name="StatementExceptionType" Type="QMV.Investigate.EntityModel.StatementExceptionType"><ReferentialConstraint Property="StatementExceptionTypeId" ReferencedProperty="StatementExceptionTypeId" /></NavigationProperty></EntityType><EntityType Name="StatementPeriodExceptionTypeLink"><Key><PropertyRef Name="StatementPeriodExceptionTypeLinkId" /></Key><Property Name="StatementPeriodExceptionTypeLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementExceptionTypeId" Type="Edm.Int32" /><Property Name="StatementPeriodId" Type="Edm.Int32" /><NavigationProperty Name="StatementExceptionType" Type="QMV.Investigate.EntityModel.StatementExceptionType"><ReferentialConstraint Property="StatementExceptionTypeId" ReferencedProperty="StatementExceptionTypeId" /></NavigationProperty><NavigationProperty Name="StatementPeriod" Type="QMV.Investigate.EntityModel.StatementPeriod"><ReferentialConstraint Property="StatementPeriodId" ReferencedProperty="StatementPeriodId" /></NavigationProperty></EntityType><EntityType Name="StatementPeriod"><Key><PropertyRef Name="StatementPeriodId" /></Key><Property Name="StatementPeriodId" Type="Edm.Int32" Nullable="false" /><Property Name="StartDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="EndDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="Name" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="PeriodStatusType" Type="Edm.Byte" Nullable="false" /><Property Name="ClosedDate" Type="Edm.DateTimeOffset" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="UpdatedBy" Type="Edm.String" /><Property Name="UpdatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="IncludesPayments" Type="Edm.Boolean" Nullable="false" /><Property Name="IncludeMasterScript" Type="Edm.Boolean" Nullable="false" /><Property Name="DisplayCode" Type="Edm.String" /><NavigationProperty Name="StatementPeriodExceptionTypeLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodExceptionTypeLink)" /><NavigationProperty Name="StatementPeriodKeyEvent" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodKeyEvent)" /><NavigationProperty Name="StatementPeriodMemberLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLink)" /><NavigationProperty Name="StatementPeriodMemberLinkItemHistory" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLinkItemHistory)" /><NavigationProperty Name="StatementPeriodRelease" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodRelease)" /></EntityType><EntityType Name="StatementPeriodKeyEvent"><Key><PropertyRef Name="StatementPeriodKeyEventId" /></Key><Property Name="StatementPeriodKeyEventId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementPeriodId" Type="Edm.Int32" /><Property Name="Name" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="EventDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="ProgressStatusType" Type="Edm.Byte" Nullable="false" /><Property Name="IsDisplayOnDashboard" Type="Edm.Boolean" Nullable="false" /><NavigationProperty Name="StatementPeriod" Type="QMV.Investigate.EntityModel.StatementPeriod"><ReferentialConstraint Property="StatementPeriodId" ReferencedProperty="StatementPeriodId" /></NavigationProperty></EntityType><EntityType Name="StatementMember"><Key><PropertyRef Name="StatementMemberId" /></Key><Property Name="StatementMemberId" Type="Edm.Int32" Nullable="false" /><Property Name="EnvironmentId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementMemberKey" Type="Edm.String" /><Property Name="FirstName" Type="Edm.String" /><Property Name="Surname" Type="Edm.String" /><Property Name="BenefitType" Type="Edm.String" /><Property Name="DateOfBirth" Type="Edm.DateTimeOffset" /><Property Name="DateJoinedFund" Type="Edm.DateTimeOffset" /><Property Name="DateExited" Type="Edm.DateTimeOffset" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="UpdatedBy" Type="Edm.String" /><Property Name="UpdatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="ResultRowNumber" Type="Edm.Int32" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><NavigationProperty Name="ApplicationEntity" Type="QMV.Investigate.EntityModel.ApplicationEntity"><ReferentialConstraint Property="ApplicationEntityId" ReferencedProperty="ApplicationEntityId" /></NavigationProperty><NavigationProperty Name="StatementMemberDataItemLink" Type="Collection(QMV.Investigate.EntityModel.StatementMemberDataItemLink)" /><NavigationProperty Name="StatementPeriodMemberLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLink)" /><NavigationProperty Name="StatementPeriodMemberLinkItemHistory" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLinkItemHistory)" /></EntityType><EntityType Name="StatementMemberDataItemLink"><Key><PropertyRef Name="StatementMemberDataItemLinkId" /></Key><Property Name="StatementMemberDataItemLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementMemberId" Type="Edm.Int32" /><Property Name="StatementMemberDataItemId" Type="Edm.Int32" /><Property Name="ItemValue" Type="Edm.String" /><NavigationProperty Name="StatementMember" Type="QMV.Investigate.EntityModel.StatementMember"><ReferentialConstraint Property="StatementMemberId" ReferencedProperty="StatementMemberId" /></NavigationProperty><NavigationProperty Name="StatementMemberDataItem" Type="QMV.Investigate.EntityModel.StatementMemberDataItem"><ReferentialConstraint Property="StatementMemberDataItemId" ReferencedProperty="StatementMemberDataItemId" /></NavigationProperty></EntityType><EntityType Name="StatementMemberDataItem"><Key><PropertyRef Name="StatementMemberDataItemId" /></Key><Property Name="StatementMemberDataItemId" Type="Edm.Int32" Nullable="false" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="Name" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="ColumnName" Type="Edm.String" /><Property Name="IsRequiredInScript" Type="Edm.Boolean" Nullable="false" /><Property Name="DisplayInSearchList" Type="Edm.Boolean" Nullable="false" /><Property Name="IsDefault" Type="Edm.Boolean" Nullable="false" /><Property Name="DataType" Type="Edm.Byte" Nullable="false" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="UpdatedBy" Type="Edm.String" /><Property Name="UpdatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><Property Name="SystemColumnName" Type="Edm.String" /><NavigationProperty Name="StatementMemberDataItemLink" Type="Collection(QMV.Investigate.EntityModel.StatementMemberDataItemLink)" /></EntityType><EntityType Name="StatementPeriodMemberLinkItemHistory"><Key><PropertyRef Name="StatementPeriodMemberLinkItemHistoryId" /></Key><Property Name="StatementPeriodMemberLinkItemHistoryId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementMemberId" Type="Edm.Int32" /><Property Name="StatementPeriodMemberLinkId" Type="Edm.Int32" /><Property Name="StatementPeriodId" Type="Edm.Int32" /><Property Name="PreviousStatementStatusTypeId" Type="Edm.Int32" /><Property Name="StatementStatusTypeId" Type="Edm.Int32" /><Property Name="PreviousStatementStatusSubTypeId" Type="Edm.Int32" /><Property Name="StatementStatusSubTypeId" Type="Edm.Int32" /><Property Name="PreviousStatementPeriodReleaseId" Type="Edm.Int32" /><Property Name="StatementPeriodReleaseId" Type="Edm.Int32" /><Property Name="CreatedBy" Type="Edm.String" /><Property Name="CreatedDate" Type="Edm.DateTimeOffset" Nullable="false" /><NavigationProperty Name="StatementMember" Type="QMV.Investigate.EntityModel.StatementMember"><ReferentialConstraint Property="StatementMemberId" ReferencedProperty="StatementMemberId" /></NavigationProperty><NavigationProperty Name="StatementPeriod" Type="QMV.Investigate.EntityModel.StatementPeriod"><ReferentialConstraint Property="StatementPeriodId" ReferencedProperty="StatementPeriodId" /></NavigationProperty><NavigationProperty Name="StatementPeriodMemberLink" Type="QMV.Investigate.EntityModel.StatementPeriodMemberLink"><ReferentialConstraint Property="StatementPeriodMemberLinkId" ReferencedProperty="StatementPeriodMemberLinkId" /></NavigationProperty><NavigationProperty Name="StatementPeriodRelease" Type="QMV.Investigate.EntityModel.StatementPeriodRelease"><ReferentialConstraint Property="StatementPeriodReleaseId" ReferencedProperty="StatementPeriodReleaseId" /></NavigationProperty><NavigationProperty Name="StatementPeriodRelease1" Type="QMV.Investigate.EntityModel.StatementPeriodRelease"><ReferentialConstraint Property="StatementPeriodReleaseId" ReferencedProperty="StatementPeriodReleaseId" /></NavigationProperty><NavigationProperty Name="StatementStatusSubType" Type="QMV.Investigate.EntityModel.StatementStatusSubType"><ReferentialConstraint Property="StatementStatusSubTypeId" ReferencedProperty="StatementStatusSubTypeId" /></NavigationProperty><NavigationProperty Name="StatementStatusSubType1" Type="QMV.Investigate.EntityModel.StatementStatusSubType"><ReferentialConstraint Property="StatementStatusSubTypeId" ReferencedProperty="StatementStatusSubTypeId" /></NavigationProperty><NavigationProperty Name="StatementStatusType" Type="QMV.Investigate.EntityModel.StatementStatusType"><ReferentialConstraint Property="StatementStatusTypeId" ReferencedProperty="StatementStatusTypeId" /></NavigationProperty><NavigationProperty Name="StatementStatusType1" Type="QMV.Investigate.EntityModel.StatementStatusType"><ReferentialConstraint Property="StatementStatusTypeId" ReferencedProperty="StatementStatusTypeId" /></NavigationProperty></EntityType><EntityType Name="StatementPeriodRelease"><Key><PropertyRef Name="StatementPeriodReleaseId" /></Key><Property Name="StatementPeriodReleaseId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementPeriodId" Type="Edm.Int32" /><Property Name="Name" Type="Edm.String" /><Property Name="ReleaseDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="ProgressStatusType" Type="Edm.Byte" Nullable="false" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><Property Name="IsDisplayOnDashboard" Type="Edm.Boolean" Nullable="false" /><NavigationProperty Name="StatementPeriod" Type="QMV.Investigate.EntityModel.StatementPeriod"><ReferentialConstraint Property="StatementPeriodId" ReferencedProperty="StatementPeriodId" /></NavigationProperty><NavigationProperty Name="StatementPeriodMemberLinkItemHistory" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLinkItemHistory)" /><NavigationProperty Name="StatementPeriodMemberLinkItemHistory1" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLinkItemHistory)" /><NavigationProperty Name="StatementPeriodMemberReleaseLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberReleaseLink)" /><NavigationProperty Name="StatementPeriodMemberLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLink)" /></EntityType><EntityType Name="StatementPeriodMemberReleaseLink"><Key><PropertyRef Name="StatementPeriodMemberReleaseLinkId" /></Key><Property Name="StatementPeriodMemberReleaseLinkId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementPeriodMemberLinkId" Type="Edm.Int32" /><Property Name="StatementPeriodReleaseId" Type="Edm.Int32" /><Property Name="EffectiveDate" Type="Edm.DateTimeOffset" Nullable="false" /><NavigationProperty Name="StatementPeriodMemberLink" Type="QMV.Investigate.EntityModel.StatementPeriodMemberLink"><ReferentialConstraint Property="StatementPeriodMemberLinkId" ReferencedProperty="StatementPeriodMemberLinkId" /></NavigationProperty><NavigationProperty Name="StatementPeriodRelease" Type="QMV.Investigate.EntityModel.StatementPeriodRelease"><ReferentialConstraint Property="StatementPeriodReleaseId" ReferencedProperty="StatementPeriodReleaseId" /></NavigationProperty></EntityType><EntityType Name="StatementStatusSubType"><Key><PropertyRef Name="StatementStatusSubTypeId" /></Key><Property Name="StatementStatusSubTypeId" Type="Edm.Int32" Nullable="false" /><Property Name="StatementStatusTypeId" Type="Edm.Int32" /><Property Name="Name" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="IsDefault" Type="Edm.Boolean" Nullable="false" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><NavigationProperty Name="StatementPeriodMemberLinkItemHistory" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLinkItemHistory)" /><NavigationProperty Name="StatementPeriodMemberLinkItemHistory1" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLinkItemHistory)" /><NavigationProperty Name="StatementStatusType" Type="QMV.Investigate.EntityModel.StatementStatusType"><ReferentialConstraint Property="StatementStatusTypeId" ReferencedProperty="StatementStatusTypeId" /></NavigationProperty><NavigationProperty Name="StatementPeriodMemberLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLink)" /></EntityType><EntityType Name="StatementStatusType"><Key><PropertyRef Name="StatementStatusTypeId" /></Key><Property Name="StatementStatusTypeId" Type="Edm.Int32" Nullable="false" /><Property Name="Name" Type="Edm.String" /><Property Name="Description" Type="Edm.String" /><Property Name="StatusType" Type="Edm.Byte" Nullable="false" /><Property Name="IsDefault" Type="Edm.Boolean" Nullable="false" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><NavigationProperty Name="StatementPeriodMemberLink" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLink)" /><NavigationProperty Name="StatementPeriodMemberLinkItemHistory" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLinkItemHistory)" /><NavigationProperty Name="StatementPeriodMemberLinkItemHistory1" Type="Collection(QMV.Investigate.EntityModel.StatementPeriodMemberLinkItemHistory)" /><NavigationProperty Name="StatementStatusSubType" Type="Collection(QMV.Investigate.EntityModel.StatementStatusSubType)" /></EntityType><EntityType Name="StatementScript"><Key><PropertyRef Name="StatementScriptId" /></Key><Property Name="StatementScriptId" Type="Edm.Int32" Nullable="false" /><Property Name="ApplicationId" Type="Edm.Int32" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /><Property Name="ValidityStartDate" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="ValidityEndDate" Type="Edm.DateTimeOffset" /><Property Name="Script" Type="Edm.String" /><Property Name="SequenceNumber" Type="Edm.Int32" Nullable="false" /><Property Name="ExecuteOnInvestigate" Type="Edm.Boolean" Nullable="false" /><Property Name="DateReleased" Type="Edm.DateTimeOffset" /><Property Name="DateReviewed" Type="Edm.DateTimeOffset" /><Property Name="LastModifiedDate" Type="Edm.DateTimeOffset" /><Property Name="StatementPeriodId" Type="Edm.Int32" Nullable="false" /><Property Name="UriPath" Type="Edm.String" /><Property Name="UseMasterScript" Type="Edm.Boolean" Nullable="false" /><NavigationProperty Name="Application" Type="QMV.Investigate.EntityModel.Application"><ReferentialConstraint Property="ApplicationId" ReferencedProperty="ApplicationId" /></NavigationProperty></EntityType><ComplexType Name="ItemBreakdown"><Property Name="ItemId" Type="Edm.Int32" Nullable="false" /><Property Name="FunctionalAreaId" Type="Edm.Int32" /><Property Name="EnvironmentId" Type="Edm.Int32" /><Property Name="ApplicationEntityId" Type="Edm.Int32" /></ComplexType><ComplexType Name="ActiveRuleExecutedTrend"><Property Name="RuleId" Type="Edm.Int32" Nullable="false" /><Property Name="EnvironmentId" Type="Edm.Int32" Nullable="false" /><Property Name="FunctionalAreaId" Type="Edm.Int32" Nullable="false" /><Property Name="RecordCount" Type="Edm.Int32" Nullable="false" /><Property Name="StartDateTime" Type="Edm.DateTimeOffset" Nullable="false" /><Property Name="IsLatestExecution" Type="Edm.Boolean" Nullable="false" /></ComplexType><Function Name="GetIncidentAgeing"><Parameter Name="EnvironmentIdList" Type="Edm.String" /><Parameter Name="InternalReferenceIdList" Type="Edm.String" /><Parameter Name="AssignedToList" Type="Edm.String" /><ReturnType Type="QMV.Investigate.EntityModel.IncidentAgeingByStatus" /></Function><Function Name="GetIncidentResolutionHistory"><Parameter Name="DateFrom" Type="Edm.String" /><Parameter Name="DateTo" Type="Edm.String" /><ReturnType Type="QMV.Investigate.EntityModel.IncidentResolutionHistory" /></Function><Function Name="GetIssueIncidentResolutionHistory"><Parameter Name="DateFrom" Type="Edm.String" /><Parameter Name="DateTo" Type="Edm.String" /><Parameter Name="InternalReferenceIdList" Type="Edm.String" /><ReturnType Type="QMV.Investigate.EntityModel.IncidentResolutionHistory" /></Function><Function Name="GetIncidentNewVsResolved"><Parameter Name="DateFrom" Type="Edm.String" /><Parameter Name="DateTo" Type="Edm.String" /><Parameter Name="EnvironmentIdList" Type="Edm.String" /><Parameter Name="InternalReferenceIdList" Type="Edm.String" /><Parameter Name="AssignedToList" Type="Edm.String" /><ReturnType Type="QMV.Investigate.EntityModel.IncidentNewVsResolved" /></Function><Function Name="GetEntityEventLinkItemHistory"><Parameter Name="EventId" Type="Edm.String" /><ReturnType Type="QMV.Investigate.EntityModel.EntityEventLinkItemHistory" /></Function><Function Name="GetIncidentDayAgeing"><Parameter Name="EnvironmentIdList" Type="Edm.String" /><Parameter Name="InternalReferenceIdList" Type="Edm.String" /><Parameter Name="AssignedToList" Type="Edm.String" /><ReturnType Type="QMV.Investigate.EntityModel.IncidentDayAgeing" /></Function><Function Name="GetIncidentBreakdown"><Parameter Name="EnvironmentIdList" Type="Edm.String" /><Parameter Name="InternalReferenceIdList" Type="Edm.String" /><Parameter Name="AssignedToList" Type="Edm.String" /><ReturnType Type="QMV.Investigate.EntityModel.IncidentBreakdownProcedure" /></Function><Function Name="GetOverallHealth"><ReturnType Type="QMV.Investigate.EntityModel.OverallHealth" /></Function><EntityContainer Name="Container"><EntitySet Name="ResolutionTypeReferences" EntityType="QMV.Investigate.EntityModel.ResolutionTypeReference" /><EntitySet Name="ResolveStatusTypeReferences" EntityType="QMV.Investigate.EntityModel.ResolveStatusTypeReference"><NavigationPropertyBinding Path="Incident" Target="Incidents" /><NavigationPropertyBinding Path="IncidentBreakdown" Target="IncidentBreakdown" /><NavigationPropertyBinding Path="Issue" Target="Issues" /><NavigationPropertyBinding Path="IssueBreakdown" Target="IssueBreakdown" /></EntitySet><EntitySet Name="ResultTypeReferences" EntityType="QMV.Investigate.EntityModel.ResultTypeReference"><NavigationPropertyBinding Path="ExecutionResult" Target="ExecutionResults" /></EntitySet><EntitySet Name="SeverityTypeReferences" EntityType="QMV.Investigate.EntityModel.SeverityTypeReference"><NavigationPropertyBinding Path="ExecutedScriptBySeverityType" Target="ExecutedScriptBySeverityType" /><NavigationPropertyBinding Path="Incident" Target="Incidents" /><NavigationPropertyBinding Path="IncidentBreakdown" Target="IncidentBreakdown" /><NavigationPropertyBinding Path="IssueBreakdown" Target="IssueBreakdown" /></EntitySet><EntitySet Name="EntityColorReferences" EntityType="QMV.Investigate.EntityModel.EntityColorReference" /><EntitySet Name="Incidents" EntityType="QMV.Investigate.EntityModel.Incident"><NavigationPropertyBinding Path="Application" Target="Applications" /><NavigationPropertyBinding Path="ApplicationEntity" Target="ApplicationEntities" /><NavigationPropertyBinding Path="Environment" Target="Environments" /><NavigationPropertyBinding Path="ExecutionResult" Target="ExecutionResults" /><NavigationPropertyBinding Path="IncidentExecutionResultLink" Target="IncidentExecutionResultLinks" /><NavigationPropertyBinding Path="IncidentIncidentClassificationLink" Target="IncidentIncidentClassificationLinks" /><NavigationPropertyBinding Path="IncidentReportPropertyLink" Target="IncidentReportPropertyLinks" /><NavigationPropertyBinding Path="IncidentScenarioLink" Target="IncidentScenarioLinks" /><NavigationPropertyBinding Path="Issue" Target="Issues" /><NavigationPropertyBinding Path="ResolveStatusTypeReference" Target="ResolveStatusTypeReferences" /><NavigationPropertyBinding Path="SeverityTypeReference" Target="SeverityTypeReferences" /></EntitySet><EntitySet Name="Rules" EntityType="QMV.Investigate.EntityModel.Rule"><NavigationPropertyBinding Path="ExecutedScriptByResolutionType" Target="ExecutedScriptByResolutionType" /><NavigationPropertyBinding Path="ExecutedScriptBySeverityType" Target="ExecutedScriptBySeverityType" /><NavigationPropertyBinding Path="IncidentBreakdown" Target="IncidentBreakdown" /><NavigationPropertyBinding Path="Issue" Target="Issues" /><NavigationPropertyBinding Path="IssueBreakdown" Target="IssueBreakdown" /><NavigationPropertyBinding Path="Script" Target="Scripts" /></EntitySet><EntitySet Name="ExecutedRules" EntityType="QMV.Investigate.EntityModel.ExecutedRule" /><EntitySet Name="Scripts" EntityType="QMV.Investigate.EntityModel.Script"><NavigationPropertyBinding Path="Application" Target="Applications" /><NavigationPropertyBinding Path="Issue" Target="Issues" /><NavigationPropertyBinding Path="Rule" Target="Rules" /></EntitySet><EntitySet Name="ExecutedScriptTotals" EntityType="QMV.Investigate.EntityModel.ExecutedScriptTotal" /><EntitySet Name="IncidentExecutionResultLinks" EntityType="QMV.Investigate.EntityModel.IncidentExecutionResultLink"><NavigationPropertyBinding Path="ExecutionResult" Target="ExecutionResults" /><NavigationPropertyBinding Path="Incident" Target="Incidents" /></EntitySet><EntitySet Name="IncidentScenarioClassificationLinks" EntityType="QMV.Investigate.EntityModel.IncidentScenarioClassificationLink"><NavigationPropertyBinding Path="IncidentScenarioLink" Target="IncidentScenarioLinks" /></EntitySet><EntitySet Name="IncidentIncidentClassificationLinks" EntityType="QMV.Investigate.EntityModel.IncidentIncidentClassificationLink"><NavigationPropertyBinding Path="Incident" Target="Incidents" /></EntitySet><EntitySet Name="IncidentReportPropertyLinks" EntityType="QMV.Investigate.EntityModel.IncidentReportPropertyLink"><NavigationPropertyBinding Path="Incident" Target="Incidents" /></EntitySet><EntitySet Name="IncidentScenarioLinks" EntityType="QMV.Investigate.EntityModel.IncidentScenarioLink"><NavigationPropertyBinding Path="Incident" Target="Incidents" /><NavigationPropertyBinding Path="IncidentScenarioClassificationLink" Target="IncidentScenarioClassificationLinks" /></EntitySet><EntitySet Name="ExecutionResults" EntityType="QMV.Investigate.EntityModel.ExecutionResult"><NavigationPropertyBinding Path="Incident" Target="Incidents" /><NavigationPropertyBinding Path="IncidentExecutionResultLink" Target="IncidentExecutionResultLinks" /><NavigationPropertyBinding Path="ResultTypeReference" Target="ResultTypeReferences" /></EntitySet><EntitySet Name="Applications" EntityType="QMV.Investigate.EntityModel.Application"><NavigationPropertyBinding Path="ApplicationEntity" Target="ApplicationEntities" /><NavigationPropertyBinding Path="Environment" Target="Environments" /><NavigationPropertyBinding Path="Incident" Target="Incidents" /><NavigationPropertyBinding Path="Issue" Target="Issues" /><NavigationPropertyBinding Path="Script" Target="Scripts" /></EntitySet><EntitySet Name="ApplicationEntities" EntityType="QMV.Investigate.EntityModel.ApplicationEntity"><NavigationPropertyBinding Path="Application" Target="Applications" /><NavigationPropertyBinding Path="ExecutedScriptByResolutionType" Target="ExecutedScriptByResolutionType" /><NavigationPropertyBinding Path="ExecutedScriptBySeverityType" Target="ExecutedScriptBySeverityType" /><NavigationPropertyBinding Path="Incident" Target="Incidents" /><NavigationPropertyBinding Path="IncidentBreakdown" Target="IncidentBreakdown" /><NavigationPropertyBinding Path="Issue" Target="Issues" /><NavigationPropertyBinding Path="IssueBreakdown" Target="IssueBreakdown" /></EntitySet><EntitySet Name="Environments" EntityType="QMV.Investigate.EntityModel.Environment"><NavigationPropertyBinding Path="Application" Target="Applications" /><NavigationPropertyBinding Path="ExecutedScriptByResolutionType" Target="ExecutedScriptByResolutionType" /><NavigationPropertyBinding Path="ExecutedScriptBySeverityType" Target="ExecutedScriptBySeverityType" /><NavigationPropertyBinding Path="Incident" Target="Incidents" /><NavigationPropertyBinding Path="IncidentBreakdown" Target="IncidentBreakdown" /><NavigationPropertyBinding Path="Issue" Target="Issues" /><NavigationPropertyBinding Path="IssueBreakdown" Target="IssueBreakdown" /></EntitySet><EntitySet Name="Issues" EntityType="QMV.Investigate.EntityModel.Issue"><NavigationPropertyBinding Path="Application" Target="Applications" /><NavigationPropertyBinding Path="ApplicationEntity" Target="ApplicationEntities" /><NavigationPropertyBinding Path="Environment" Target="Environments" /><NavigationPropertyBinding Path="Incident" Target="Incidents" /><NavigationPropertyBinding Path="IncidentBreakdown" Target="IncidentBreakdown" /><NavigationPropertyBinding Path="ResolveStatusTypeReference" Target="ResolveStatusTypeReferences" /><NavigationPropertyBinding Path="Rule" Target="Rules" /><NavigationPropertyBinding Path="Script" Target="Scripts" /></EntitySet><EntitySet Name="ExecutedScripts" EntityType="QMV.Investigate.EntityModel.ExecutedScript" /><EntitySet Name="StatementPeriodMemberLinks" EntityType="QMV.Investigate.EntityModel.StatementPeriodMemberLink"><NavigationPropertyBinding Path="StatementPeriodMemberExceptionLink" Target="StatementPeriodMemberExceptionLinks" /></EntitySet><EntitySet Name="StatementPeriodMemberExceptionLinks" EntityType="QMV.Investigate.EntityModel.StatementPeriodMemberExceptionLink"><NavigationPropertyBinding Path="StatementPeriodMemberLink" Target="StatementPeriodMemberLinks" /></EntitySet><EntitySet Name="ExecutedScriptBySeverityType" EntityType="QMV.Investigate.EntityModel.ExecutedScriptBySeverityType"><NavigationPropertyBinding Path="ApplicationEntity" Target="ApplicationEntities" /><NavigationPropertyBinding Path="Environment" Target="Environments" /><NavigationPropertyBinding Path="Rule" Target="Rules" /><NavigationPropertyBinding Path="SeverityTypeReference" Target="SeverityTypeReferences" /></EntitySet><EntitySet Name="ExecutedScriptByResolutionType" EntityType="QMV.Investigate.EntityModel.ExecutedScriptByResolutionType"><NavigationPropertyBinding Path="ApplicationEntity" Target="ApplicationEntities" /><NavigationPropertyBinding Path="Environment" Target="Environments" /><NavigationPropertyBinding Path="Rule" Target="Rules" /></EntitySet><EntitySet Name="IssueBreakdown" EntityType="QMV.Investigate.EntityModel.IssueBreakdown"><NavigationPropertyBinding Path="ApplicationEntity" Target="ApplicationEntities" /><NavigationPropertyBinding Path="Environment" Target="Environments" /><NavigationPropertyBinding Path="ResolveStatusTypeReference" Target="ResolveStatusTypeReferences" /><NavigationPropertyBinding Path="Rule" Target="Rules" /><NavigationPropertyBinding Path="SeverityTypeReference" Target="SeverityTypeReferences" /></EntitySet><EntitySet Name="IncidentBreakdown" EntityType="QMV.Investigate.EntityModel.IncidentBreakdown"><NavigationPropertyBinding Path="ApplicationEntity" Target="ApplicationEntities" /><NavigationPropertyBinding Path="Environment" Target="Environments" /><NavigationPropertyBinding Path="Issue" Target="Issues" /><NavigationPropertyBinding Path="ResolveStatusTypeReference" Target="ResolveStatusTypeReferences" /><NavigationPropertyBinding Path="Rule" Target="Rules" /><NavigationPropertyBinding Path="SeverityTypeReference" Target="SeverityTypeReferences" /></EntitySet><FunctionImport Name="GetIncidentAgeing" Function="QMV.Investigate.EntityModel.GetIncidentAgeing" IncludeInServiceDocument="true" /><FunctionImport Name="GetIncidentResolutionHistory" Function="QMV.Investigate.EntityModel.GetIncidentResolutionHistory" IncludeInServiceDocument="true" /><FunctionImport Name="GetIssueIncidentResolutionHistory" Function="QMV.Investigate.EntityModel.GetIssueIncidentResolutionHistory" IncludeInServiceDocument="true" /><FunctionImport Name="GetIncidentNewVsResolved" Function="QMV.Investigate.EntityModel.GetIncidentNewVsResolved" IncludeInServiceDocument="true" /><FunctionImport Name="GetEntityEventLinkItemHistory" Function="QMV.Investigate.EntityModel.GetEntityEventLinkItemHistory" IncludeInServiceDocument="true" /><FunctionImport Name="GetIncidentDayAgeing" Function="QMV.Investigate.EntityModel.GetIncidentDayAgeing" IncludeInServiceDocument="true" /><FunctionImport Name="GetIncidentBreakdown" Function="QMV.Investigate.EntityModel.GetIncidentBreakdown" IncludeInServiceDocument="true" /><FunctionImport Name="GetOverallHealth" Function="QMV.Investigate.EntityModel.GetOverallHealth" IncludeInServiceDocument="true" /></EntityContainer></Schema></edmx:DataServices></edmx:Edmx>`);
        metaDataSymbol = new MetadataSymbols(xml);
        schema = metaDataSymbol.defaultSchema;
        getODataLiteParser = (odataUrl: string): OData4LiteParser => {
            const codePointCharStream: CodePointCharStream = CharStreams.fromString(odataUrl);
            const lexer = new OData4LiteLexer(codePointCharStream);
            const tokens: CommonTokenStream = new CommonTokenStream(lexer);
            return OData4LiteParser.buildOData4LiteParser(tokens, schema);
        };
    });

    describe('Lexer', function () {
        it('Should support creating a lexer from a string, parsing the tokens from the lexer into a tree, and walking the tree.', function () {
            const codePointCharStream: CodePointCharStream = CharStreams.fromString(
                `Incident?$select=Name,CreatedDate&$expand=Issue&$filter=Name eq 'John' and Field2 eq 0`
            );
            const lexer = new OData4LiteLexer(codePointCharStream);
            const tokens: CommonTokenStream = new CommonTokenStream(lexer);
            tokens.fill();
            const tokenList = tokens.getTokens();

            tokenList.forEach((t, i) => {
                switch (i) {
                    case 0:
                        assert.equal(t.text, 'Incident');
                        assert.equal(t.type, OData4LiteLexer.IDENTIFIER);
                        break;
                    case 1:
                        assert.equal(t.text, '?');
                        assert.equal(t.type, OData4LiteLexer.QUESTION);
                        break;
                    case 2:
                        assert.equal(t.text, '$select');
                        assert.equal(t.type, OData4LiteLexer.SELECT);
                        break;
                    case 3:
                        assert.equal(t.text, '=');
                        assert.equal(t.type, OData4LiteLexer.EQ);
                        break;
                    case 4:
                        assert.equal(t.text, 'Name');
                        assert.equal(t.type, OData4LiteLexer.IDENTIFIER);
                        break;
                    case 5:
                        assert.equal(t.text, ',');
                        assert.equal(t.type, OData4LiteLexer.COMMA);
                        break;
                    case 6:
                        assert.equal(t.text, 'CreatedDate');
                        assert.equal(t.type, OData4LiteLexer.IDENTIFIER);
                        break;
                    case 7:
                        assert.equal(t.text, '&');
                        assert.equal(t.type, OData4LiteLexer.AMPERSAND);
                        break;
                    case 8:
                        assert.equal(t.text, '$expand');
                        assert.equal(t.type, OData4LiteLexer.EXPAND);
                        break;
                    case 9:
                        assert.equal(t.text, '=');
                        assert.equal(t.type, OData4LiteLexer.EQ);
                        break;
                    case 10:
                        assert.equal(t.text, 'Issue');
                        assert.equal(t.type, OData4LiteLexer.IDENTIFIER);
                        break;
                    case 11:
                        assert.equal(t.text, '&');
                        assert.equal(t.type, OData4LiteLexer.AMPERSAND);
                        break;
                    case 12:
                        assert.equal(t.text, '$filter');
                        assert.equal(t.type, OData4LiteLexer.FILTER);
                        break;
                    case 13:
                        assert.equal(t.text, '=');
                        assert.equal(t.type, OData4LiteLexer.EQ);
                        break;
                    case 14:
                        assert.equal(t.text, 'Name');
                        assert.equal(t.type, OData4LiteLexer.IDENTIFIER);
                        break;
                    case 15:
                        assert.equal(t.text, ' eq ');
                        assert.equal(t.type, OData4LiteLexer.OP_EQ);
                        break;
                    case 16:
                        assert.equal(t.text, '\'John\'');
                        assert.equal(t.type, OData4LiteLexer.LIT_STRING);
                        break;
                    case 17:
                        assert.equal(t.text, ' and ');
                        assert.equal(t.type, OData4LiteLexer.OP_AND);
                        break;
                    case 18:
                        assert.equal(t.text, 'Field2');
                        assert.equal(t.type, OData4LiteLexer.IDENTIFIER);
                        break;
                    case 19:
                        assert.equal(t.text, ' eq ');
                        assert.equal(t.type, OData4LiteLexer.OP_EQ);
                        break;
                    case 20:
                        assert.equal(t.text, '0');
                        assert.equal(t.type, OData4LiteLexer.LIT_INTEGER);
                        break;
                    case 21:
                        assert.equal(t.text, '<EOF>');
                        assert.equal(t.type, OData4LiteLexer.EOF);
                        break;
                    default:
                        break;
                }
            });

            const parser: OData4LiteParser = new OData4LiteParser(tokens);
            const tree: ParseTree = parser.odataRelativeURI();
            assert.ok(tree, 'tree returned');
        });

        it('Should match true as a literal boolean, not an identifier.', function () {
            const codePointCharStream: CodePointCharStream = CharStreams.fromString(
                `Incident?$count=true`
            );
            const lexer = new OData4LiteLexer(codePointCharStream);
            const tokens: CommonTokenStream = new CommonTokenStream(lexer);
            tokens.fill();
            const tokenList = tokens.getTokens();
            tokenList.forEach((t, i) => {
                switch (i) {
                    case 4:
                        assert.equal(t.text, 'true');
                        assert.equal(t.type, OData4LiteLexer.LIT_BOOLEAN);
                        break;
                    default:
                        break;
                }
            });
        });
    });

    describe('Parser', function () {
        it('Should create expression nodes with the correct associativity for the pattern "a eq b and c eq d"', function () {
            const codePointCharStream: CodePointCharStream = CharStreams.fromString(
                `$filter=Name eq 'John' and IssueId eq 1`
            );
            const lexer = new OData4LiteLexer(codePointCharStream);
            const tokens: CommonTokenStream = new CommonTokenStream(lexer);
            const parser: OData4LiteParser = new OData4LiteParser(tokens);
            const tree: FilterContext = parser.filter();
            const expression: ExpressionContext = tree.expression();

            assert.equal(expression.constructor, LogicalExpressionContext);

            if (expression instanceof LogicalExpressionContext) {
                assert.notEqual(expression.OP_AND(), undefined);
                assert.equal(expression.expression()[0].constructor, BinaryExpressionContext);
                assert.equal(expression.expression()[1].constructor, BinaryExpressionContext);
            }
        });

        it('Should recognise literal arrays within sq brackets', function() {
            const tree: OdataRelativeURIContext = getODataLiteParser(`Entity?$filter=[] eq []`).odataRelativeURI();
            assert.equal(tree.queryOptions().queryOption()[0].systemQueryOption().filter().expression().text, '[] eq []');
        });

        it('Should recognise a function import being able to look up unbound functions by name.', function () {
            const tree: OdataRelativeURIContext = getODataLiteParser(`GetIncidentBreakdown(EnvironmentId='1,2,3',InternalReferenceIdList='1,2,3',AssignedToList='admin')`).odataRelativeURI();
            const functionImport = tree.resourcePath().functionImportCall();
            assert.ok(functionImport, 'Didn\'t match function import call');
        });

        it('Should recognise a collection navigation apart from a function import as it is context (metadata.schema) aware ', function () {
            const codePointCharStream: CodePointCharStream = CharStreams.fromString(
                `Incidents(1)?$expand=Issue`
            );
            const lexer = new OData4LiteLexer(codePointCharStream);
            const tokens: CommonTokenStream = new CommonTokenStream(lexer);
            const parser: OData4LiteParser = OData4LiteParser.buildOData4LiteParser(tokens, metaDataSymbol.defaultSchema);
            const tree: OdataRelativeURIContext = parser.odataRelativeURI();
            const functionImport = tree.resourcePath().functionImportCall();
            assert.ok(!functionImport, 'Should not find a function import call');
            const collectionNavigation = tree.resourcePath().collectionNavigation();
            assert.ok(collectionNavigation, 'Should find a collection navigation');
            assert.equal(collectionNavigation.keyPredicate().simpleKey().primitiveLiteral().LIT_INTEGER().text, '1');
        });

        describe('Unbound Function tests', function () {
            it('Should parse an unbound function with no arguments', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser(`GetIncidentBreakdown()`).odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'GetIncidentBreakdown');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().LPAREN().text, '(');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().RPAREN().text, ')');
            });

            it('Should correctly parse an unbound function with 1 literal argument', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser(`GetIncidentBreakdown(EnvironmentIdList='1,2,3')`).odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'GetIncidentBreakdown');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().LPAREN().text, '(');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().functionParameter()[0].functionParameterName().text, 'EnvironmentIdList');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().functionParameter()[0].primitiveLiteral().text, '\'1,2,3\'');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().RPAREN().text, ')');
            });

            it('Should correctly parse an unbound function with 1 alias argument', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser(`GetIncidentBreakdown(EnvironmentIdList=@EnvironmentIdList)`).odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'GetIncidentBreakdown');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().LPAREN().text, '(');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().functionParameter()[0].functionParameterName().text, 'EnvironmentIdList');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().functionParameter()[0].parameterAlias().text, '@EnvironmentIdList');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().RPAREN().text, ')');
            });

            it('Should correctly parse an unbound function with 2 alias argument', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser(`GetIncidentBreakdown(EnvironmentIdList=@EnvironmentIdList,AnotherOne=@AnotherOne)`).odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'GetIncidentBreakdown');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().LPAREN().text, '(');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().functionParameter()[0].functionParameterName().text, 'EnvironmentIdList');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().functionParameter()[0].parameterAlias().text, '@EnvironmentIdList');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().functionParameter()[1].functionParameterName().text, 'AnotherOne');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().functionParameter()[1].parameterAlias().text, '@AnotherOne');
                assert.equal(tree.resourcePath().functionImportCall().functionParameters().RPAREN().text, ')');
            });

        })

        describe('Test skip system query', function () {
            it('should parse $skip query options', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser('SomeResource?$count=true&$skip=50&$top=50').odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'SomeResource');

                const skip = tree.queryOptions().queryOption()[1].systemQueryOption().skip();
                assert.equal(skip.LIT_INTEGER().text, '50');
                assert.equal(skip.SKIP_COUNT(), '$skip');

                const count = tree.queryOptions().queryOption()[0].systemQueryOption().count();
                assert.equal(count.LIT_BOOLEAN().text, 'true');
                assert.equal(count.COUNT(), '$count');

                const top = tree.queryOptions().queryOption()[2].systemQueryOption().top();
                assert.equal(top.LIT_INTEGER().text, '50');
                assert.equal(top.TOP().text, '$top');

            })
        });

        describe('Test orderby system query', function () {
            it('should parse a simple $orderby query option', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser('SomeResource?$orderby=Field').odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'SomeResource');
                const orderby = tree.queryOptions().queryOption()[0].systemQueryOption().orderby();
                const orderbyItemContexts: OrderbyItemContext[] = orderby.orderbyItem();
                
                assert.equal(orderbyItemContexts[0].text, 'Field');
            });

            it('should order by a property path correctly', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser('SomeResource?$orderby=Field/ChildField').odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'SomeResource');
                const orderby = tree.queryOptions().queryOption()[0].systemQueryOption().orderby();
                const orderByProperty = orderby.orderbyItem()[0];
                assert.equal(orderByProperty.expression().text, 'Field/ChildField');
            });

            it('should parse a multi column $orderby query option', function () {
                const url = 'SomeResource?$orderby=Field1,Field2,Field3';
                const tree: OdataRelativeURIContext = getODataLiteParser(url).odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'SomeResource');
                const orderby = tree.queryOptions().queryOption()[0].systemQueryOption().orderby();
                assert.equal(orderby.orderbyItem()[0].text, 'Field1');
                assert.equal(orderby.orderbyItem()[1].text, 'Field2');
                assert.equal(orderby.orderbyItem()[2].text, 'Field3');
            });

            it('should parse a multi column $orderby query option with asc or desc specified', function () {
                const url = 'SomeResource?$orderby=Field1 desc,Field2,Field3 asc';
                const tree: OdataRelativeURIContext = getODataLiteParser(url).odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'SomeResource');
                const orderby = tree.queryOptions().queryOption()[0].systemQueryOption().orderby();
                assert.equal(orderby.orderbyItem()[0].expression().text, 'Field1');
                assert.equal(orderby.orderbyItem()[0].DESC().text, ' desc');
                assert.equal(orderby.orderbyItem()[1].expression().text, 'Field2');
                assert.equal(orderby.orderbyItem()[2].expression().text, 'Field3');
                assert.equal(orderby.orderbyItem()[2].ASC().text, ' asc');
            });
        });

        describe('$filter', function () {
            it('should support lambda expressions (any and all)', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser('Applications?$filter=ApplicationEntity/any(a:a/ApplicationEntityId in @ApplicationEntityIdList)').odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'Applications');
                const filter = tree.queryOptions().queryOption()[0].systemQueryOption().filter();
                assert.ok(filter, '$filter not found');
                const filterExpression = filter.expression();
                assert.equal(filterExpression.text, 'ApplicationEntity/any(a:a/ApplicationEntityId in @ApplicationEntityIdList)');
                assert.equal(filterExpression.constructor,  FirstMemberExpressionContext);
                const fmec: FirstMemberExpressionContext = <FirstMemberExpressionContext>filterExpression;
                assert.equal(fmec.firstMemberExpr().memberExpr().propertyPathExpr().property().text, 'ApplicationEntity');
                assert.equal(fmec.firstMemberExpr().memberExpr().propertyPathExpr().collectionPathExpr().text, '/any(a:a/ApplicationEntityId in @ApplicationEntityIdList)');
                assert.equal(fmec.firstMemberExpr().memberExpr().propertyPathExpr().collectionPathExpr().FWD_SLASH().text, '/');
                assert.equal(fmec.firstMemberExpr().memberExpr().propertyPathExpr().collectionPathExpr().anyExpr().text, 'any(a:a/ApplicationEntityId in @ApplicationEntityIdList)');
                assert.equal(fmec.firstMemberExpr().memberExpr().propertyPathExpr().collectionPathExpr().anyExpr().expression().text, 'a/ApplicationEntityId in @ApplicationEntityIdList');
                const anyExpression: AnyExprContext = fmec.firstMemberExpr().memberExpr().propertyPathExpr().collectionPathExpr().anyExpr();
                assert.equal(anyExpression.lambdaParameterIdentifier().IDENTIFIER().text, 'a');
                assert.equal(anyExpression.expression().text, 'a/ApplicationEntityId in @ApplicationEntityIdList');
                const inExpressionContext: InExpressionContext = <InExpressionContext>anyExpression.expression();
                assert.equal(inExpressionContext.parameterAlias().text, '@ApplicationEntityIdList');
            })

            it('should support lambda expressions (any and all)', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser('Applications?$filter=ApplicationId eq 1').odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'Applications');
                const filter = tree.queryOptions().queryOption()[0].systemQueryOption().filter();
                assert.ok(filter, '$filter not found');
                const filterExpression = filter.expression();
                assert.equal(filterExpression.text, 'ApplicationId eq 1');
                const binaryExpressionContext: BinaryExpressionContext = <BinaryExpressionContext>filterExpression;
                assert.equal(binaryExpressionContext.expression()[0].text, 'ApplicationId');
                assert.equal(binaryExpressionContext.OP_EQ().text, ' eq ');
                const firstMemberExpressionContext: FirstMemberExpressionContext = <FirstMemberExpressionContext>binaryExpressionContext.expression()[0];
                const firstMemberExpr: FirstMemberExprContext = firstMemberExpressionContext.firstMemberExpr();
                const memberExpr: MemberExprContext = firstMemberExpr.memberExpr();
                const propertyPathExpresssion = memberExpr.propertyPathExpr();
                const propertyExpr = propertyPathExpresssion.property();
                const identifier = propertyExpr.IDENTIFIER();
                assert.equal(identifier.text, 'ApplicationId');
                assert.equal(firstMemberExpressionContext.firstMemberExpr().memberExpr().propertyPathExpr().property().text, 'ApplicationId');
                assert.equal(binaryExpressionContext.expression()[1].text, '1');
            })
        })

        describe('First Member Expressions', function () {
            it('should recognised Single Navigation Expressions that are 2 or more properties deep', function () {
                const codePointCharStream: CodePointCharStream = CharStreams.fromString('Property1/Property2/Leaf');
                const lexer = new OData4LiteLexer(codePointCharStream);
                const tokens: CommonTokenStream = new CommonTokenStream(lexer);
                const parser: OData4LiteParser = new OData4LiteParser(tokens)
                const firstMemberExprContext = parser.firstMemberExpr();
                assert.notEqual(firstMemberExprContext, null);
                assert.notEqual(firstMemberExprContext.memberExpr(), null);
                assert.equal(firstMemberExprContext.text, 'Property1/Property2/Leaf');
                assert.notEqual(firstMemberExprContext.memberExpr(), null);
                const memberExpr: MemberExprContext = firstMemberExprContext.memberExpr();
                assert.equal(memberExpr.text, 'Property1/Property2/Leaf');
                const propertyPathExpr: PropertyPathExprContext = memberExpr.propertyPathExpr();
                assert.equal(propertyPathExpr.property().text, 'Property1');
                const deepMemberExpr: MemberExprContext = propertyPathExpr.singleNavigationExpr().memberExpr();
                assert.equal(deepMemberExpr.text, 'Property2/Leaf');
                const deepSingleNavProperty: SingleNavigationExprContext = deepMemberExpr.propertyPathExpr().singleNavigationExpr();
                assert.equal(deepSingleNavProperty.text, '/Leaf');
                assert.equal(deepSingleNavProperty.memberExpr().propertyPathExpr().property().text, 'Leaf');
            })
        })

        describe('$apply transformations', function () {
            it('should correctly parse an $apply groupby tranformation', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser('SomeResource?$apply=groupby((SimpleProperty,NavigationPropertyRoot/Property),aggregate(NavigationPropertyRoot/Property with countdistinct as PropertyCount))&$filter=NavigationPropertyRoot/Property eq 1 and SimpleProperty in [1,2] and AssignedTo eq @AssignedTo').odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'SomeResource');
                assert.notEqual(tree.queryOptions().queryOption()[0].systemQueryOption().apply(), null);
                const apply = tree.queryOptions().queryOption()[0].systemQueryOption().apply();
                assert.notEqual(apply, null);
                const groupByTransformation = apply.applyExpression().applyTrafo()[0].groupbyTrafo();
                assert.notEqual(groupByTransformation, null);
                assert.equal(groupByTransformation.groupByList().groupbyElement().length, 2);
                assert.notEqual(groupByTransformation.applyExpression(), null);
                const aggregateTransformation = groupByTransformation.applyExpression().applyTrafo()[0].aggregateTrafo().aggregationParam()[0];
                assert.notEqual(aggregateTransformation, null);
                const aggregateExpression = aggregateTransformation.aggregationExpr().expression();

                assert.equal(aggregateExpression.constructor, FirstMemberExpressionContext);
                assert.equal(aggregateExpression.text, 'NavigationPropertyRoot/Property');
                const aggregateAs = aggregateTransformation.aggregationExpr().dynamicPropertyAssignment();
                assert.equal(aggregateAs.text, ' as PropertyCount');
                const aggregateWith = aggregateTransformation.aggregationExpr().aggregateWith();
                assert.equal(aggregateWith.text, ' with countdistinct');

                const filter = tree.queryOptions().queryOption()[1].systemQueryOption().filter();
                assert.equal(filter.FILTER(), '$filter');
                // Not testing the filter here..
            });

            it('should correctly parse an $apply with a filter plus groupby', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser('SomeResource?$apply=filter(P1/P2/P3 eq 1)/groupby((SimpleProperty,NavigationPropertyRoot/Property),aggregate(NavigationPropertyRoot/Property with countdistinct as PropertyCount))&$filter=NavigationPropertyRoot/Property eq 1 and SimpleProperty in [1,2] and AssignedTo eq @AssignedTo').odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'SomeResource');
                assert.notEqual(tree.queryOptions().queryOption()[0].systemQueryOption().apply(), null);
                const apply = tree.queryOptions().queryOption()[0].systemQueryOption().apply();
                assert.notEqual(apply, null);
                const filterTransformation: FilterTrafoContext = apply.applyExpression().applyTrafo()[0].filterTrafo();
                assert.notEqual(filterTransformation, null);
                assert.equal(filterTransformation.expression().text, 'P1/P2/P3 eq 1');
                const binaryExpression: BinaryExpressionContext = <BinaryExpressionContext>filterTransformation.expression();

                // check the property expression on the binary filter expression
                const firstMemberExprContext: FirstMemberExpressionContext = <FirstMemberExpressionContext>binaryExpression.expression()[0];
                assert.equal(firstMemberExprContext.firstMemberExpr().memberExpr().propertyPathExpr().property().text, 'P1');
                assert.equal(firstMemberExprContext.firstMemberExpr().memberExpr().propertyPathExpr().singleNavigationExpr().memberExpr().text, 'P2/P3');
                assert.equal(firstMemberExprContext.firstMemberExpr().memberExpr().propertyPathExpr().singleNavigationExpr().memberExpr().propertyPathExpr().property().text, 'P2');
                assert.equal(firstMemberExprContext.firstMemberExpr().memberExpr().propertyPathExpr().singleNavigationExpr().memberExpr().propertyPathExpr().singleNavigationExpr().memberExpr().propertyPathExpr().property().text, 'P3');
                //const literalExpr: LiteralExpressionContext = <LiteralExpressionContext>binaryExpression.expression()[1];
                // const firstMemberExprContext: FirstMemberExprContext = filterTransformation.expression();
                // assert.equal(firstMemberExprContext.memberExpr().propertyPathExpr().property().text, 'P1');

                const groupByTransformation = apply.applyExpression().applyTrafo()[1].groupbyTrafo();
                assert.notEqual(groupByTransformation, null);
                assert.equal(groupByTransformation.groupByList().groupbyElement().length, 2);
                assert.notEqual(groupByTransformation.applyExpression(), null);
                const aggregateTransformation = groupByTransformation.applyExpression().applyTrafo()[0].aggregateTrafo().aggregationParam()[0];
                assert.notEqual(aggregateTransformation, null);
                const aggregateExpression = aggregateTransformation.aggregationExpr().expression();

                assert.equal(aggregateExpression.constructor, FirstMemberExpressionContext);
                assert.equal(aggregateExpression.text, 'NavigationPropertyRoot/Property');
                const aggregateAs = aggregateTransformation.aggregationExpr().dynamicPropertyAssignment();
                assert.equal(aggregateAs.text, ' as PropertyCount');
                const aggregateWith = aggregateTransformation.aggregationExpr().aggregateWith();
                assert.equal(aggregateWith.text, ' with countdistinct');

                const filter = tree.queryOptions().queryOption()[1].systemQueryOption().filter();
                assert.equal(filter.FILTER(), '$filter');
                // Not testing the filter here..
            });

            it('should understand valid compute transformations', function () {
                const tree: OdataRelativeURIContext = getODataLiteParser('SomeResource?$apply=compute(day(date(EffectiveDate)) as Day)/groupby((Day),aggregate($count as Count))').odataRelativeURI();
                assert.equal(tree.resourcePath().IDENTIFIER().text, 'SomeResource');
                assert.notEqual(tree.queryOptions().queryOption()[0].systemQueryOption().apply(), null);
                const apply = tree.queryOptions().queryOption()[0].systemQueryOption().apply();
                assert.notEqual(apply, null);
                const computeTransformation = apply.applyExpression().applyTrafo()[0].computeTrafo();
                assert.equal(computeTransformation.text, 'compute(day(date(EffectiveDate)) as Day)');
                assert.equal(computeTransformation.computeExpression()[0].text, 'day(date(EffectiveDate)) as Day');
                assert.equal(computeTransformation.computeExpression()[0].dynamicPropertyAssignment().text, ' as Day');
            })
        })
    })
});
